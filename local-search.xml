<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>用户、组和权限</title>
    <link href="/yindong.github.io/2022/07/23/%E7%94%A8%E6%88%B7%E3%80%81%E7%BB%84%E5%92%8C%E6%9D%83%E9%99%90/"/>
    <url>/yindong.github.io/2022/07/23/%E7%94%A8%E6%88%B7%E3%80%81%E7%BB%84%E5%92%8C%E6%9D%83%E9%99%90/</url>
    
    <content type="html"><![CDATA[<h2 id="7-用户、组和权限"><a href="#7-用户、组和权限" class="headerlink" title="7 用户、组和权限"></a>7 用户、组和权限</h2><p><strong>内容概述</strong></p><ul><li>Linux的安全模型</li><li>用户和组相关文件</li><li>用户和组管理命令</li><li>理解并设置文件权限</li><li>默认权限</li><li>特殊权限</li><li>文件访问控制列表</li></ul><h3 id="7-1-Linux安全模型"><a href="#7-1-Linux安全模型" class="headerlink" title="7.1 Linux安全模型"></a>7.1 Linux安全模型</h3><p>资源分派：</p><ul><li>Authentlcat;on: 认证；验证用户身份</li><li>Authorization：授权；不同的用户设置不同权限</li><li>Accouting|Audition：审计；</li></ul><p>当用户登入时，系统会自动分配令牌token，包括用户表示和组成员等信息</p><h4 id="7-1-1-用户"><a href="#7-1-1-用户" class="headerlink" title="7.1.1 用户"></a>7.1.1 用户</h4><p>Linux中每个用户是通过User ID （UID）来唯一标识</p><ul><li><p>管理员：root，0</p></li><li><p>普通用户：1-60000 自动分配</p><ul><li><p>系统用户：1-499（CentOS6以前），1-999（CentOS7以后）</p><p>对守护进程获取资源进行权限分配</p></li><li><p>登入用户：500+ （CentOS6以前），1000+（CentOS7以后）</p><p>交互式登入</p></li></ul></li></ul><h4 id="7-1-2-用户组"><a href="#7-1-2-用户组" class="headerlink" title="7.1.2 用户组"></a>7.1.2 用户组</h4><p>Linux中可以将一个或多个用户加入用户组中，用户组通过Group ID （GID） 来唯一标识的。</p><ul><li>管理员组：root，0</li><li>普通组：<ul><li>系统组：1-499,1-999（CentOS7以后）对守护进程获取资源进行权限分配</li><li>普通组：500+，1000+ (CentOS7以后）给用户使用</li></ul></li></ul><h4 id="7-1-3-用户和组的关系"><a href="#7-1-3-用户和组的关系" class="headerlink" title="7.1.3 用户和组的关系"></a>7.1.3 用户和组的关系</h4><ul><li>用户的主要组(primary group):用户必须属于一个且只有一个主组，默认创建用户时会自动创建和用户名同名的组，做为用户的主要组，由于此组中只有一个用户，又称为私有组</li><li>用户的附加组(supplementary group):一个用户可以属于零个或多个辅助组</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[05:22:40 root@centos8 ~]<span class="hljs-comment">#id postfix</span><br>uid=89(postfix) gid=89(postfix) 组=89(postfix),12(mail)<br></code></pre></td></tr></table></figure><h4 id="7-1-4-安全上下文"><a href="#7-1-4-安全上下文" class="headerlink" title="7.1.4 安全上下文"></a>7.1.4 安全上下文</h4><ul><li><p>Linux安全上下文Context:运行中的程序，即进程(process)，以进程发起者的身份运行，进程所能够访问资源的权限取决于进程的运行者的身份</p></li><li><p>比如: root身份运行/bin/cat /etc/shadow和yh的身份运行/bin/cat /etc/shadow，得到的结果是不同的shadow能否能被访问是由运行者的身份决定，非程序本身</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[05:27:10 root@centos8 ~]<span class="hljs-comment">#cat /etc/shadow</span><br>root:$6$YW6eWp5UdpNFxXP2<span class="hljs-variable">$WJ6AEr8nEF6HaVMKJOdmYFX3R4KMt6TY6J7HaYn4iWHejTvbyk684bGwNxDTwNY6GysvADLsM0XeTEMhkU3Pv0</span>::0:99999:7:::<br>bin:*:18397:0:99999:7:::<br>daemon:*:18397:0:99999:7:::<br>[05:28:10 yh@centos8 ~]<span class="hljs-comment">#cat /etc/shadow</span><br><span class="hljs-built_in">cat</span>: /etc/shadow: Permission denied<br></code></pre></td></tr></table></figure><h3 id="7-2-用户和组的配置文件"><a href="#7-2-用户和组的配置文件" class="headerlink" title="7.2 用户和组的配置文件"></a>7.2 用户和组的配置文件</h3><h4 id="7-2-1-Linux用户和组的主要配置文件"><a href="#7-2-1-Linux用户和组的主要配置文件" class="headerlink" title="7.2.1 Linux用户和组的主要配置文件"></a>7.2.1 Linux用户和组的主要配置文件</h4><ul><li><p>/etc/passwd: 用户及其属性信息(名称、UID、主组ID等)</p></li><li><p>/etc/shadow: 用户密码及其相关属性</p></li><li><p>/etc/group: 组及其属性信息</p></li><li><p>/etc/gshadow: 组密码及其相关属性</p></li></ul><p>范例：Ubuntu启用root登入，并开启ssh远程登入root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@hao-virtual-machine:~<span class="hljs-comment"># vim /etc/shadow</span><br><span class="hljs-comment">#取消root后的叹号 即可本地登入root</span><br>root@hao-virtual-machine:~<span class="hljs-comment"># vim /etc/ssh/sshd_config</span><br>！！！<span class="hljs-comment">#PermitRootLig prohibit-password 修改为 PermitRootLogin yes</span><br><span class="hljs-comment">#修改后即可远程登入root</span><br></code></pre></td></tr></table></figure><h4 id="7-2-2-passwd文件格式"><a href="#7-2-2-passwd文件格式" class="headerlink" title="7.2.2 passwd文件格式"></a>7.2.2 passwd文件格式</h4><p>login name：登入用名</p><p>passwd：密码</p><p>UID：用户身份编号</p><p>GID：登录默认所在组编号</p><p>GECOS：用户全名或注释</p><p>home directory：用户主目录</p><p>shell：用户默认使用的shell</p><h4 id="7-2-3-shadow文件格式"><a href="#7-2-3-shadow文件格式" class="headerlink" title="7.2.3 shadow文件格式"></a>7.2.3 shadow文件格式</h4><ul><li><p>登录用名</p></li><li><p>用户密码:—般用sha512加密</p></li><li><p>从1970年1月1日起到密码最近一次被更改的时间</p></li><li><p>密码再过几天可以被变更(0表示随时可被变更)</p></li><li><p>密码再过几天必须被变更(99999表示永不过期)</p></li><li><p>密码过期前几天系统提醒用户(默认为一周)</p></li><li><p>密码过期几天后帐号会被锁定</p></li><li><p>从1970年1月1日算起，多少天后帐号失效</p></li></ul><p>更改密码加密算法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">authconfig --passalgo=sha256 --update<br></code></pre></td></tr></table></figure><p>密码的安全策略</p><ul><li>足够长</li><li>使用数字、大写字母、小写字母及特殊字符中至少3种</li><li>使用随机密码</li><li>定期更换，不要使用最近曾经使用过的密码</li></ul><h4 id="7-2-4-group文件格式"><a href="#7-2-4-group文件格式" class="headerlink" title="7.2.4 group文件格式"></a>7.2.4 group文件格式</h4><p>群组名称：就是群组名称</p><p>群组密码：通常不需要设定，密码是被记录在/etc/gshadow</p><p>GID:就是群组的ID</p><p>以当前组为附加组的用户列表(分隔符为逗号)</p><h4 id="7-2-5-gshadow文件格式"><a href="#7-2-5-gshadow文件格式" class="headerlink" title="7.2.5 gshadow文件格式"></a>7.2.5 gshadow文件格式</h4><p>群组名称：就是群的名称</p><p>群组密码：</p><p>组管理员列表：组管理员的列表，更改组密码和成员</p><p>以当前组为附加组的用户列表：多个用户间用逗号分隔</p><h4 id="7-2-6-文件操作"><a href="#7-2-6-文件操作" class="headerlink" title="7.2.6 文件操作"></a>7.2.6 文件操作</h4><p>vipw和vigr</p><p>pwck和grpck</p><h3 id="7-3-用户和组管理命令"><a href="#7-3-用户和组管理命令" class="headerlink" title="7.3 用户和组管理命令"></a>7.3 用户和组管理命令</h3><p>用户管理命令</p><ul><li>useradd</li><li>usermod</li><li>userdel</li></ul><p>组账号维护命令</p><ul><li>groupadd</li><li>groupmod</li><li>groupdel</li></ul><h4 id="7-3-1-用户创建"><a href="#7-3-1-用户创建" class="headerlink" title="7.3.1 用户创建"></a>7.3.1 用户创建</h4><p>useradd 命令可以创建新的Linux用户</p><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd [options] Login<br></code></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-u：UID</span><br><br><span class="hljs-deletion">-o：配合-u选项，不检查UID的唯一性</span><br><br><span class="hljs-deletion">-g：GID 指明用户所属基本组，可为组名，也可以GID</span><br><br><span class="hljs-deletion">-c：‘comment’ 用户的注释信息</span><br><br><span class="hljs-deletion">-d：HOME_DIR 以指定的路径（不存在）为家目录</span><br><br><span class="hljs-deletion">-s：SHELL 指明用户的默认shell程序，可用列表在/etc/shells文件中</span><br><br><span class="hljs-deletion">-G：group1，group2...   为用户指明附加组，组须事先存在</span><br><br><span class="hljs-deletion">-N：不创建私用组做主组，使用users组做主组</span><br><br><span class="hljs-deletion">-r：创建系统用户CentOS6之前：ID&lt;500，CentOS7以后：ID&lt;1000</span><br><br><span class="hljs-deletion">-m：创建家目录，用于系统用户</span><br><br><span class="hljs-deletion">-M：不创建家目录，用于非系统用户</span><br></code></pre></td></tr></table></figure><p>范例：创建账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[03:07:33 root@c~]<span class="hljs-comment">#useradd -r -u 48 -s /sbin/nologin -d /var/www -c &quot;Apache&quot; apache</span><br></code></pre></td></tr></table></figure><p>useradd命令默认值设定由/etc/default/useradd定义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[07:40:51 root@centos8 ~]<span class="hljs-comment">#cat /etc/default/useradd</span><br><span class="hljs-comment"># useradd defaults file</span><br>GROUP=100<br>HOME=/home<br>INACTIVE=-1<br>EXPIRE=<br>SHELL=/bin/bash<br>SKEL=/etc/skel<br>CREATE_MAIL_SPOOL=<span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>显示或更改默认设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd -D<br>useradd -D -s SHELL<br>useradd -D -b BASE_DIR<br>useradd -D -g GROUP<br></code></pre></td></tr></table></figure><p>新建用户的相关文件</p><ul><li>/etc/default/useradd    规则</li><li>/etc/skel/*                      家目录里默认生成的文件</li><li>/etc/login.defs               默认密码规则</li></ul><p>批量创建用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">newusers passwd格式文件<br></code></pre></td></tr></table></figure><p>批量修改用户口令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> username:passwd | chpasswd<br></code></pre></td></tr></table></figure><h4 id="7-3-2-用户属性修改"><a href="#7-3-2-用户属性修改" class="headerlink" title="7.3.2 用户属性修改"></a>7.3.2 用户属性修改</h4><p>usermod命令可以修改用户属性</p><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">usermod [OPTION] login<br></code></pre></td></tr></table></figure><p>常见选项：</p><p>-u:UID:新UID</p><p>-g:GID:新主组</p><p>-G:GROUP1[GROUP2.…[GROUPNJ]:新附加组，原来的附加组将会被覆盖;若保留原有，则要同时使用-a选项</p><p>-s:SHELL:新的默认SHELL</p><p>-c:’COMMENT’:新的注释信息</p><p>-d:HOME:新家目录不会自动创建;若要创建新家目录并移动原家数据，同时使用-m选项</p><p>-l:login_name:新的名字</p><p>-L:lock指定用户,在/etcl/shadow密码栏的增加!</p><p>-U:unlock指定用户,将/etc/shadow密码栏的!拿掉</p><p>-e:YYY-MM-DD:指明用户账号过期日期</p><p>-f:INACTIVE:设定非活动期限</p><h4 id="7-3-3-删除用户"><a href="#7-3-3-删除用户" class="headerlink" title="7.3.3 删除用户"></a>7.3.3 删除用户</h4><p>userdel 可删除Linux用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">userdel [options]... Login<br></code></pre></td></tr></table></figure><p>常见选项：</p><p>-f，强制</p><p>-r，删除用户家目录和邮箱</p><h4 id="7-3-4-查看用户相关的ID信息"><a href="#7-3-4-查看用户相关的ID信息" class="headerlink" title="7.3.4 查看用户相关的ID信息"></a>7.3.4 查看用户相关的ID信息</h4><p>id命令可以查看用户的UID，GID等信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">id</span> [option]... [user]<br></code></pre></td></tr></table></figure><p>-u:显示UID</p><p>-g:显示GID</p><p>-G:显示用户所属的组的ID</p><p>-n:显示名称，需配合ugG使用</p><h4 id="7-3-5-切换用户或以其他用户身份执行命令"><a href="#7-3-5-切换用户或以其他用户身份执行命令" class="headerlink" title="7.3.5 切换用户或以其他用户身份执行命令"></a>7.3.5 切换用户或以其他用户身份执行命令</h4><p>su 命令可以切换用户身份，并且以指定用户的身份执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">su [options...] [-] [user [args...]]<br></code></pre></td></tr></table></figure><p>切换用户的方式：</p><ul><li>su username：非登入切换，既不会读取目标用户配置文件。不改变当前工作目录</li><li>su -username：登入切换，会读取目标用户的配置文件，切换至家目录，完全切换</li></ul><p>说明：root su至其他用户无需密码；非root用户切换时需要密码</p><p>换个身份执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">su [-] username -c <span class="hljs-string">&#x27;command&#x27;</span><br></code></pre></td></tr></table></figure><p>:chestnut:切换到root账户执行getent shadow后退回到yh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[04:38:15 yh@centos8 ~]<span class="hljs-variable">$su</span> - root -c <span class="hljs-string">&quot;getent shadow&quot;</span><br></code></pre></td></tr></table></figure><p>选项：-l  –login su -l username 相当于 su -username</p><h4 id="7-3-6-设置密码"><a href="#7-3-6-设置密码" class="headerlink" title="7.3.6 设置密码"></a>7.3.6 设置密码</h4><p>passwd 可以修改用户密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd [options...] username<br></code></pre></td></tr></table></figure><p>常用选项：</p><p>-d:删除指定用户密码</p><p>-l:锁定指定用户</p><p>-u:解锁指定用户</p><p>-e:强制用户下次登入修改密码</p><p>-f:强制操作</p><p>-n:指定最短使用期限</p><p>-x:最大使用期限</p><p>-w:提前多少天开始警告</p><p>-i:非活动期限    </p><p>–stdin:从标准输入接受用户密码</p><p>:chestnut:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;password&quot;</span> | passwd --stdin username<br></code></pre></td></tr></table></figure><h4 id="7-3-7-修改用户密码策略"><a href="#7-3-7-修改用户密码策略" class="headerlink" title="7.3.7 修改用户密码策略"></a>7.3.7 修改用户密码策略</h4><p>chage 可以修改用户密码策略</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chage [options...] login<br></code></pre></td></tr></table></figure><p>选项:</p><p>-d:last_day.    最近一次密码设置时间设为“最近日期”</p><p>-m:–mindays min_days. 最小口令有效期</p><p>-M:–maxdays mac_days.  最大口令有效期。</p><p>-W:–warndays warn_days 将过期警告天数设为“警告天数”</p><p>-I:–inactive inactive 密码过期后的宽限期</p><p>-E:–expiredate expire_date 用户的有效期</p><p>-:查看用户密码规则</p><p>:chestnut:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">chage -d 0 tom <span class="hljs-comment">#下一次登入强制重设密码</span><br>[02:14:02 root@centos8 ~]<span class="hljs-comment">#chage -m 3 -M 42 -W 14 -I 7 -E 2099-12-12 yh</span><br>[02:14:43 root@centos8 ~]<span class="hljs-comment">#chage -l yh</span><br>最近一次密码修改时间：11月 26, 2021<br>密码过期时间：1月 07, 2022<br>密码失效时间：1月 14, 2022<br>帐户过期时间：12月 12, 2099<br>两次改变密码之间相距的最小天数：3<br>两次改变密码之间相距的最大天数：42<br>在密码过期之前警告的天数：14<br></code></pre></td></tr></table></figure><h4 id="7-3-8-用户相关的其它命令"><a href="#7-3-8-用户相关的其它命令" class="headerlink" title="7.3.8 用户相关的其它命令"></a>7.3.8 用户相关的其它命令</h4><p>chfn 指定个人信息</p><p>chsh 指定shell</p><p>finger 可看用户个人信息</p><p>:chestnut:更改shell类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[02:34:19 root@centos8 ~]<span class="hljs-comment">#chsh -s /bin/sh yh</span><br>正在更改 yh 的 shell。<br>shell 已更改。<br>[02:34:40 root@centos8 ~]<span class="hljs-comment">#getent passwd yh</span><br>yh:x:1000:1000:Yh:/home/yh:/bin/sh<br>-----------------------------------------------------<br>[02:34:55 root@centos8 ~]<span class="hljs-comment">#usermod -s /bin/bash yh</span><br>[02:37:40 root@centos8 ~]<span class="hljs-comment">#getent passwd yh</span><br>yh:x:1000:1000:Yh:/home/yh:/bin/bash<br></code></pre></td></tr></table></figure><p>:chestnut:修改用户为不可登入的shell类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">[07:44:34 root@centos8 ~]<span class="hljs-comment">#getent passwd yh</span><br>yh:x:1000:1000:Yh:/home/yh:/bin/bash<br>[07:44:55 root@centos8 ~]<span class="hljs-comment">#chsh -s /sbin/nologin yh</span><br>正在更改 yh 的 shell。<br>chsh: 警告：“/sbin/nologin”未在 /etc/shells 中列出。<br>shell 已更改。<br>[07:45:13 root@centos8 ~]<span class="hljs-comment">#getent passwd yh</span><br>yh:x:1000:1000:Yh:/home/yh:/sbin/nologin<br>[07:45:21 root@centos8 ~]<span class="hljs-comment">#su - yh</span><br>This account is currently not available.<br>[07:45:41 root@centos8 ~]<span class="hljs-comment">#chsh -s /bin/false yh</span><br>正在更改 yh 的 shell。<br>chsh: 警告：“/bin/false”未在 /etc/shells 中列出。<br>shell 已更改。<br>[07:47:45 root@centos8 ~]<span class="hljs-comment">#getent passwd yh</span><br>yh:x:1000:1000:Yh:/home/yh:/bin/false<br>[07:48:02 root@centos8 ~]<span class="hljs-comment">#su - yh</span><br>[07:48:06 root@centos8 ~]<span class="hljs-comment">#</span><br>[07:48:06 root@centos8 ~]<span class="hljs-comment">#usermod -s /bin/bash yh</span><br>[07:48:50 root@centos8 ~]<span class="hljs-comment">#su - yh</span><br>[07:48:55 yh@centos8 ~]$<br></code></pre></td></tr></table></figure><h4 id="7-3-9-管理组"><a href="#7-3-9-管理组" class="headerlink" title="7.3.9 管理组"></a>7.3.9 管理组</h4><p><strong>创建组</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd [option...] groupname   <span class="hljs-comment">#创建组</span><br></code></pre></td></tr></table></figure><p>选项:   -g:GID号     -r:创建系统组</p><p>:chestnut:创建GID48的系统组apache</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd -g 48 -r apache<br></code></pre></td></tr></table></figure><p><strong>修改组</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupmod [option...] groupname    <span class="hljs-comment">#修改组</span><br></code></pre></td></tr></table></figure><p>选项:   -n: 新名字     -g:新的GID</p><p><strong>删除组</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupdel [option...] groupname     <span class="hljs-comment">#删除组</span><br></code></pre></td></tr></table></figure><p>选项：-f 强制删除，即使是用户的主组也强制删除组</p><p><strong>更改组密码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpasswd [options...] groupname   <span class="hljs-comment">#更改组密码</span><br></code></pre></td></tr></table></figure><p>常见选项：-a user :将user添加至指定组中；-d user :从指定组中移除用户user；</p><p>-A user1，user2.设置有管理员权限的用户列表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[03:06:20 root@centos8 ~]<span class="hljs-comment">#groupadd admin</span><br>[03:10:05 root@centos8 ~]<span class="hljs-comment">#id yh</span><br>uid=1000(yh) gid=1000(yh) 组=1000(yh),10(wheel)<br>[03:10:08 root@centos8 ~]<span class="hljs-comment">#gpasswd -a yh admin</span><br>正在将用户“yh”加入到“admin”组中<br>[03:10:24 root@centos8 ~]<span class="hljs-comment">#id yh</span><br>uid=1000(yh) gid=1000(yh) 组=1000(yh),10(wheel),1001(admin)<br>[03:10:26 root@centos8 ~]<span class="hljs-comment">#gpasswd -d yh admin</span><br>正在将用户“yh”从“admin”组中删除<br>[03:11:43 root@centos8 ~]<span class="hljs-comment">#id yh</span><br>uid=1000(yh) gid=1000(yh) 组=1000(yh),10(wheel)<br></code></pre></td></tr></table></figure><p><strong>临时切换主组</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">newgrp [-] [group]    <span class="hljs-comment">#临时切换主组</span><br></code></pre></td></tr></table></figure><p>使用-选项，可以初始化用户环境 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">[03:00:34 yh@centos8 ~]<span class="hljs-variable">$id</span><br>uid=1000(yh) gid=1000(yh) 组=1000(yh),10(wheel)<br>[03:00:42 yh@centos8 ~]<span class="hljs-variable">$newgrp</span> root<br>密码：<br>newgrp: failed to crypt password with previous salt: 无效的参数<br>[03:00:54 yh@centos8 ~]<span class="hljs-variable">$gpasswd</span> root<br>gpasswd：没有权限。<br>[03:01:05 yh@centos8 ~]<span class="hljs-variable">$sudo</span> gpasswd root<br>[sudo] yh 的密码：<br>正在修改 root 组的密码<br>新密码：<br>请重新输入新密码：<br>[03:01:26 yh@centos8 ~]<span class="hljs-variable">$newgrp</span> root<br>密码：<br>[03:01:37 yh@centos8 ~]<span class="hljs-variable">$id</span><br>uid=1000(yh) gid=0(root) 组=0(root),10(wheel),1000(yh)<br>[03:01:40 yh@centos8 ~]<span class="hljs-variable">$touch</span> <span class="hljs-built_in">test</span><br>[03:03:08 yh@centos8 ~]<span class="hljs-variable">$ll</span><br>-rw-r--r--  1 yh root 0 12月  2 15:03 <span class="hljs-built_in">test</span><br>[03:03:09 yh@centos8 ~]<span class="hljs-variable">$exit</span><br><span class="hljs-built_in">exit</span><br>[03:03:19 yh@centos8 ~]<span class="hljs-variable">$id</span><br>uid=1000(yh) gid=1000(yh) 组=1000(yh),10(wheel)<br>[03:03:22 yh@centos8 ~]<span class="hljs-variable">$touch</span> test1<br>[03:03:29 yh@centos8 ~]<span class="hljs-variable">$ll</span><br>-rw-r--r--  1 yh root 0 12月  2 15:03 <span class="hljs-built_in">test</span><br>-rw-rw-r--  1 yh yh   0 12月  2 15:03 test1<br></code></pre></td></tr></table></figure><p><strong>更改和查看组成员</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupmems [options..] [action动作]<br></code></pre></td></tr></table></figure><p>选项：<br>  -g, –group groupname         更改组 groupname，而不是用户的组(只 root)<br>  -R, –root CHROOT_DIR         chroot 到的目录</p><p>动作：<br>  -a, –add username            将用户 username 添加到组成员中<br>  -d, –delete username         从组的成员中删除用户 username<br>  -h, –help                    显示此帮助信息并推出<br>  -p, –purge                   从组中移除所有成员<br>  -l, –list                    列出组中的所有成员</p><h3 id="7-4-文件管理权限"><a href="#7-4-文件管理权限" class="headerlink" title="7.4 文件管理权限"></a>7.4 文件管理权限</h3><h4 id="7-4-1-文件所有者和属组属性操作"><a href="#7-4-1-文件所有者和属组属性操作" class="headerlink" title="7.4.1 文件所有者和属组属性操作"></a>7.4.1 文件所有者和属组属性操作</h4><h5 id="7-4-1-1-设置文件的所有者chown"><a href="#7-4-1-1-设置文件的所有者chown" class="headerlink" title="7.4.1.1 设置文件的所有者chown"></a>7.4.1.1 设置文件的所有者chown</h5><p>chown命令可以修改文件的属主，也可以修改文件属组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">用法：<span class="hljs-built_in">chown</span> [选项]... [所有者] [:[组]] 文件...<br>　或：<span class="hljs-built_in">chown</span> [选项]... --reference=参考文件 文件...<br></code></pre></td></tr></table></figure><p>:chestnut:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">[09:03:17 root@centos8 ~]<span class="hljs-comment">#touch test              #更改test文件的所有者和所属组为yh</span><br>[09:09:26 root@centos8 ~]<span class="hljs-comment">#ll test</span><br>-rw-r--r-- 1 root root 0 12月  2 21:09 <span class="hljs-built_in">test</span><br>[09:09:29 root@centos8 ~]<span class="hljs-comment">#chown yh:yh test</span><br>[09:09:45 root@centos8 ~]<span class="hljs-comment">#ll test</span><br>-rw-r--r-- 1 yh yh 0 12月  2 21:09 <span class="hljs-built_in">test</span><br>--------------------------------------------<br>[09:33:44 root@centos8 ~]<span class="hljs-comment">#ll test1                 #更改test1文件的所属组为yh</span><br>-rw-r--r-- 1 root root 0 12月  2 21:24 test1<br>[09:33:46 root@centos8 ~]<span class="hljs-comment">#chown :yh test1</span><br>[09:33:55 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rw-r--r-- 1 root yh 0 12月  2 21:24 test1<br>--------------------------------------------<br>[09:24:36 root@centos8 ~]<span class="hljs-comment">#ll test1 test2         #参考test2的所有者和所属组来修改test1</span><br>-rw-r--r-- 1 yh   yh   0 12月  2 21:24 test1<br>-rw-r--r-- 1 root root 0 12月  2 21:24 test2<br>[09:24:41 root@centos8 ~]<span class="hljs-comment">#chown --reference=test2 test1</span><br>[09:25:02 root@centos8 ~]<span class="hljs-comment">#ll test1 test2</span><br>-rw-r--r-- 1 root root 0 12月  2 21:24 test1<br>-rw-r--r-- 1 root root 0 12月  2 21:24 test2<br></code></pre></td></tr></table></figure><h4 id="7-4-2-文件权限"><a href="#7-4-2-文件权限" class="headerlink" title="7.4.2 文件权限"></a>7.4.2 文件权限</h4><h5 id="7-4-2-1-文件权限说明"><a href="#7-4-2-1-文件权限说明" class="headerlink" title="7.4.2.1 文件权限说明"></a>7.4.2.1 文件权限说明</h5><p><strong>文件的权限主要针对三类对象进行定义</strong></p><ul><li><p>owner 属主 u</p></li><li><p>group  属组 g</p></li><li><p>other   其他 o</p></li></ul><p><strong>每个文件针对每类访问者都定义了三种权限</strong></p><ul><li><p>r   readable</p></li><li><p>w  writable</p></li><li><p>x  excutable</p></li></ul><p><strong>对文件的权限</strong></p><ul><li><p>r   可使用文件查看类工具获取其内容</p></li><li><p>w  可修改其内容</p></li><li><p>x   可以把此文件提请内核启动为一 个进程</p></li></ul><p><strong>对目录的权限</strong></p><ul><li>r  可以使用Is查看此目录中文件列表</li><li>w 可在此目录中创建文件， 也可删除此目录中的文件</li><li>x  可以使用ls -I查看此目录中文件元数据(须配合r) ，可以cd进入此目录</li><li>X  只给目录x权限，不给无执行权限的文件x权限</li></ul><p>![截屏2021-12-03 下午12.59.52](../../../Documents/Typroa-Linux基础入门-photo/截屏2021-12-03 下午12.59.52.png)</p><p>八进制数字</p><p>— 000     0</p><p>–x 001    1</p><p>-w- 010   2</p><p>-wx 011  3</p><p>r– 100    4</p><p>r-x 101    5</p><p>rw- 110   6</p><p>rwx 111  7</p><p>🌰</p><p>640  rw-r—–</p><p>755  rwxr-xr-x</p><p>面试题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">执行 <span class="hljs-built_in">cp</span> /etc/issue /data/dir/ 所需的最小权限<br>/bin/cp    x<br>/etc       x<br>/etc/issue r<br>/data      x<br>/data/dir  w x<br></code></pre></td></tr></table></figure><h5 id="7-4-2-2-修改文件权限chmod"><a href="#7-4-2-2-修改文件权限chmod" class="headerlink" title="7.4.2.2 修改文件权限chmod"></a>7.4.2.2 修改文件权限chmod</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">用法：<span class="hljs-built_in">chmod</span> [选项]... 模式[,模式]... 文件...<br>　或：<span class="hljs-built_in">chmod</span> [选项]... 八进制模式 文件...<br>　或：<span class="hljs-built_in">chmod</span> [选项]... --reference=参考文件 文件...<br></code></pre></td></tr></table></figure><p>说明：</p><p>-R：递归修改权限</p><p>修改一类用户的所有权限</p><p>u= ;g= ;o= ;ug= ;a= ;　</p><p>修改一类用户某位或某些位权限</p><p>u+ ;u- ;g+ ;o- ;a+ ;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:12:46 root@centos8 ~]<span class="hljs-comment">#ll test1 test2</span><br>-rw-r--r-- 1 root yh   0 12月  2 21:24 test1<br>-rw-r--r-- 1 root root 0 12月  2 21:24 test2<br>[10:13:42 root@centos8 ~]<span class="hljs-comment">#chmod ug= test1</span><br>[10:14:03 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-------r-- 1 root yh 0 12月  2 21:24 test1<br>[10:14:06 root@centos8 ~]<span class="hljs-comment">#chmod a= test1</span><br>[10:14:20 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>---------- 1 root yh 0 12月  2 21:24 test1<br>[10:14:22 root@centos8 ~]<span class="hljs-comment">#chmod a+r test1</span><br>[10:15:28 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-r--r--r-- 1 root yh 0 12月  2 21:24 test1<br>[10:15:29 root@centos8 ~]<span class="hljs-comment">#chmod u+w,g+x test1</span><br>[10:16:08 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rw-r-xr-- 1 root yh 0 12月  2 21:24 test1<br>[10:16:11 root@centos8 ~]<span class="hljs-comment">#chmod g-r test1</span><br>[10:16:45 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rw---xr-- 1 root yh 0 12月  2 21:24 test1<br></code></pre></td></tr></table></figure><h4 id="7-4-3-新建文件和目录的默认权限"><a href="#7-4-3-新建文件和目录的默认权限" class="headerlink" title="7.4.3 新建文件和目录的默认权限"></a>7.4.3 新建文件和目录的默认权限</h4><p>umask的值可以用来保留在创建文件权限</p><p>实现方式：</p><ul><li>新建文件的默认权限：666-umask，如果所得结果某位存在执行(奇数)，则将其权限+1</li><li>新建目录的默认权限：777-umask</li></ul><p>非特权用户umask默认是002</p><p>root的umask默认是022</p><p>查看umask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">umask</span> <br><span class="hljs-comment">#模式方式显示</span><br><span class="hljs-built_in">umask</span> -S <br><span class="hljs-comment">#输出可被调用</span><br><span class="hljs-built_in">umask</span> -p<br></code></pre></td></tr></table></figure><p>修改umask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">umask</span> <span class="hljs-comment">#</span><br><span class="hljs-built_in">umask</span> 002<br><span class="hljs-built_in">umask</span> u=rw,g=r,0=<br></code></pre></td></tr></table></figure><p>持久保存umask</p><ul><li>全局设置：/etc/bashrc</li><li>用户设置：~/.bashrc</li></ul><h4 id="7-4-4-Linux文件系统上的特殊权限"><a href="#7-4-4-Linux文件系统上的特殊权限" class="headerlink" title="7.4.4 Linux文件系统上的特殊权限"></a>7.4.4 Linux文件系统上的特殊权限</h4><p>前面介绍了三种常见的权限:r,w,x。还有三种特殊权限：SUID，SGID，Sticky</p><h5 id="7-4-4-1-特殊权限SUID"><a href="#7-4-4-1-特殊权限SUID" class="headerlink" title="7.4.4.1 特殊权限SUID"></a>7.4.4.1 特殊权限SUID</h5><p>安全上下文</p><p>前提： 进程有属主和属组。 文件有属主和属组。</p><ol><li><p>任何一个可执行程序文件能不能启动为进程， 取决于发起者对程序文件是否拥有执行权限。</p></li><li><p>启动为进程之后，其进程的属主为发起者，进程的属组发起者所属的组。</p></li><li><p>进程访问文件时的权限，取决于进程的发起者。</p><p>(a)进程的发起者，同文件的属主，则应用文件属主权限</p><p>(b)进程的发起者，属于文件属组；则应用文件属组权限</p><p>(c)应用文件“其它”权限</p></li></ol><p>二进制可执行文件上SUID权限功能：</p><ul><li>任何一个可执行程序文件能不能启动为进程:取决发起者对程序文件是否拥有执行权限</li><li>启动为进程之后，其进程的属主为原程序文件的属主</li><li>SUID只对二进制可执行程序有效</li><li>SUID设置在目录上无意义</li></ul><h5 id="7-4-4-2-特殊权限SGID"><a href="#7-4-4-2-特殊权限SGID" class="headerlink" title="7.4.4.2 特殊权限SGID"></a>7.4.4.2 特殊权限SGID</h5><p>二进制的可执行文件上SGID权限功能</p><ul><li>任何一个可执行程序文件能不能启动为进程取决于发起者对程序文件是否拥有执行权限</li><li>启动为进程后，其进程的属组为原程序文件的属组</li></ul><p>SGID权限设定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> g+s file...<br><span class="hljs-built_in">chmod</span> 2xxx file...<br><span class="hljs-built_in">chmod</span> g-s file...<br></code></pre></td></tr></table></figure><p>目录上的SGID权限功能</p><p>默认情况下，用户创建文件时，其属组为此用户所属的主组，一旦某目录被设定了SGID，则对此目录有写权限的用户在此目录中创建的文件所属的组为此目录的属组，通常用于创建一个协作目录。</p><p>SGID权限设定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> g+s <span class="hljs-built_in">dir</span>...<br><span class="hljs-built_in">chmod</span> 2xxx <span class="hljs-built_in">dir</span>...<br><span class="hljs-built_in">chmod</span> g-s <span class="hljs-built_in">dir</span>...<br></code></pre></td></tr></table></figure><h5 id="7-4-4-3-特殊权限sticky位"><a href="#7-4-4-3-特殊权限sticky位" class="headerlink" title="7.4.4.3 特殊权限sticky位"></a>7.4.4.3 特殊权限sticky位</h5><p>具有写权限的目录通常用户可以删除该目录中的任何文件,无论该文件的权限或拥有权在目录设置Sticky位,只有文件的所有者或root可以删除该文件sticky设置在文件.上无意义</p><p>Sticky权限设定：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> o+t <span class="hljs-built_in">dir</span>...<br><span class="hljs-built_in">chmod</span> 1xxx <span class="hljs-built_in">dir</span>...<br><span class="hljs-built_in">chmod</span> o-t <span class="hljs-built_in">dir</span>...<br></code></pre></td></tr></table></figure><h5 id="7-4-4-5-特殊权限字法"><a href="#7-4-4-5-特殊权限字法" class="headerlink" title="7.4.4.5 特殊权限字法"></a>7.4.4.5 特殊权限字法</h5><p>SUID SGID Sticky</p><p>000 0</p><p>001 1</p><p>010 2</p><p>011 3</p><p>100 4</p><p>101 5</p><p>110 6</p><p>111 7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">[09:55:38 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rw---xr-- 1 root yh 0 12月  2 21:24 test1<br>[09:55:43 root@centos8 ~]<span class="hljs-comment">#chmod 4614 test1</span><br>[09:56:18 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rwS--xr-- 1 root yh 0 12月  2 21:24 test1<br>--------------------------------------------------<br>[09:55:38 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rw---xr-- 1 root yh 0 12月  2 21:24 test1<br>[09:55:43 root@centos8 ~]<span class="hljs-comment">#chmod 2614 test1</span><br>[09:56:18 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rw---sr-- 1 root yh 0 12月  2 21:24 test1<br>--------------------------------------------------<br>[09:55:38 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rw---xr-- 1 root yh 0 12月  2 21:24 test1<br>[09:55:43 root@centos8 ~]<span class="hljs-comment">#chmod 1614 test1</span><br>[09:56:18 root@centos8 ~]<span class="hljs-comment">#ll test1</span><br>-rw---xr-S 1 root yh 0 12月  2 21:24 test1<br></code></pre></td></tr></table></figure><p>权限位映射</p><p>SUID：user，占据属主的执行权限位</p><p>​        s：属主拥有x权限</p><p>​        S：属主没有x权限</p><p>SGID：group，占据属组的执行权限位</p><p>​        s：group拥有x权限</p><p>​        S：group没有x权限</p><p>Sticky：other，占据other的执行权限位</p><p>​        t：other拥有x权限</p><p>​        T：other没有x权限</p><h4 id="7-4-5-设定文件特殊属性"><a href="#7-4-5-设定文件特殊属性" class="headerlink" title="7.4.5 设定文件特殊属性"></a>7.4.5 设定文件特殊属性</h4><p>设置文件的特殊属性，防止可以访问root用户误操作删除或修改文件</p><p>不能删除，改名，更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chattr +i<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:17:38 root@centos8 ~]<span class="hljs-comment">#lsattr t1 t2</span><br>-------------------- t1<br>-------------------- t2<br>[10:17:45 root@centos8 ~]<span class="hljs-comment">#chattr +i t1</span><br>[10:18:02 root@centos8 ~]<span class="hljs-comment">#lsattr t1 t2</span><br>----i--------------- t1<br>-------------------- t2<br>[10:18:07 root@centos8 ~]<span class="hljs-comment">#rm -f t1</span><br><span class="hljs-built_in">rm</span>: 无法删除<span class="hljs-string">&#x27;t1&#x27;</span>: 不允许的操作<br>[10:18:48 root@centos8 ~]<span class="hljs-comment">#echo hellow &gt;&gt; t1</span><br>-bash: t1: 不允许的操作<br>[10:18:59 root@centos8 ~]<span class="hljs-comment">#mv t1 test1</span><br><span class="hljs-built_in">mv</span>: 无法将<span class="hljs-string">&#x27;t1&#x27;</span> 移动至<span class="hljs-string">&#x27;test1&#x27;</span>: 不允许的操作<br></code></pre></td></tr></table></figure><p>只能追加内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chattr +a<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:21:11 root@centos8 ~]<span class="hljs-comment">#chattr +a t1</span><br>[10:21:17 root@centos8 ~]<span class="hljs-comment">#lsattr t1</span><br>-----a-------------- t1<br>[10:21:24 root@centos8 ~]<span class="hljs-comment">#mv t1 /t1</span><br><span class="hljs-built_in">mv</span>: 无法将<span class="hljs-string">&#x27;t1&#x27;</span> 移动至<span class="hljs-string">&#x27;/t1&#x27;</span>: 不允许的操作<br>[10:24:38 root@centos8 ~]<span class="hljs-comment">#rm -f t1</span><br><span class="hljs-built_in">rm</span>: 无法删除<span class="hljs-string">&#x27;t1&#x27;</span>: 不允许的操作<br>[10:25:12 root@centos8 ~]<span class="hljs-comment">#echo hello world &gt; t1</span><br>-bash: t1: 不允许的操作<br>[10:27:09 root@centos8 ~]<span class="hljs-comment">#echo hello world &gt;&gt; t1</span><br>[10:27:23 root@centos8 ~]<span class="hljs-comment">#cat t1</span><br>hello world<br></code></pre></td></tr></table></figure><p>显示特定属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsattr<br></code></pre></td></tr></table></figure><h4 id="7-4-6-访问控制列表"><a href="#7-4-6-访问控制列表" class="headerlink" title="7.4.6 访问控制列表"></a>7.4.6 访问控制列表</h4><h5 id="7-4-6-1-ACL权限功能"><a href="#7-4-6-1-ACL权限功能" class="headerlink" title="7.4.6.1 ACL权限功能"></a>7.4.6.1 ACL权限功能</h5><p>ACL: Access Control List，实现灵活的权限管理</p><p>除了文件的所有者，所属组和其它人，可以对更多的用户设置权限</p><p>CentOS7 默认创建的xfs和ext4文件系统具有ACL功能</p><p>CentOS7之前版本，默认手工创建的ext4文件系统无ACL功能,需手动增加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">tune2fs -o acl /dev/sdb1<br>mount -o acl /dev/sdb1 /mnt/test<br></code></pre></td></tr></table></figure><p>ACL生效顺序:</p><p>所有者,自定义用户,所属组|自定义组,其他人</p><h5 id="7-4-6-2-ACL相关命令"><a href="#7-4-6-2-ACL相关命令" class="headerlink" title="7.4.6.2 ACL相关命令"></a>7.4.6.2 ACL相关命令</h5><p>setfacl可以设置ACL权限</p><p>选项: -m:修改文件的当前ACL</p><p>​          -x :从文件的ACL中删除条目</p><p>getfacl可查看设置的ACL权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">05:38:12 root@centos8 ~]<span class="hljs-comment">#setfacl -m u:yh:- t2</span><br>[05:38:26 root@centos8 ~]<span class="hljs-comment">#getfacl t2</span><br><span class="hljs-comment"># file: t2</span><br><span class="hljs-comment"># owner: root</span><br><span class="hljs-comment"># group: root</span><br>user::rw-<br>user:yh:---<br>group::r--<br>mask::r--<br>other::r--<br>[05:40:57 yh@centos8 root]<span class="hljs-variable">$cat</span> t2<br><span class="hljs-built_in">cat</span>: t2: 权限不够<br>[05:42:48 root@centos8 ~]<span class="hljs-comment">#setfacl -m u:yh:rw t2</span><br>[05:43:20 yh@centos8 ~]<span class="hljs-variable">$cat</span> /root/t2<br>[05:43:27 yh@centos8 ~]<span class="hljs-variable">$echo</span> hellow &gt;&gt; /root/t2<br>[05:43:44 yh@centos8 ~]<span class="hljs-variable">$cat</span> /root/t2<br>hellow<br></code></pre></td></tr></table></figure><p>清除所有ACL权限: setfacl -b filename</p><p><strong>备份和还原ACL</strong></p><p>主要的文件操作命令cp和mv都支持ACL,只是cp命令需要加上-p参数.但是tar等常见的备份工具是不会保留目录和文件的ACL信息.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#备份ACL</span><br>getfacl -R /tmp/dir &gt; acl.txt<br><span class="hljs-comment">#消除ACL权限</span><br>setfacl -R -b /tmp/dir<br><span class="hljs-comment">#还原ACL权限</span><br>setfacl -R --set-file=acl.txt /tmp/dir<br><span class="hljs-comment">#还原ACL权限</span><br>setfacl --restore acl.txt<br><span class="hljs-comment">#查看ACL权限</span><br>getfacl -R /tmp/dir<br></code></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>标准I/O重定向和管道</title>
    <link href="/yindong.github.io/2022/07/23/%E6%A0%87%E5%87%86I-O%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E7%AE%A1%E9%81%93/"/>
    <url>/yindong.github.io/2022/07/23/%E6%A0%87%E5%87%86I-O%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E7%AE%A1%E9%81%93/</url>
    
    <content type="html"><![CDATA[<h2 id="6-标准I-O重定向和管道"><a href="#6-标准I-O重定向和管道" class="headerlink" title="6 标准I/O重定向和管道"></a>6 标准I/O重定向和管道</h2><h3 id="6-1-标准输入和输出"><a href="#6-1-标准输入和输出" class="headerlink" title="6.1 标准输入和输出"></a>6.1 标准输入和输出</h3><p>程序：指令+数据</p><p>读入数据：Input</p><p>输出数据：output</p><p>打开的文件都有一个fd: file descriptor(文件描述符)</p><p>Linux给程序提供三种IO设备</p><ul><li><p>标准输入  (STDIN)        -0  默认接受来自终端窗口的输入</p></li><li><p>标准输出  (STDOUT)    -1  默认输出到终端窗口</p></li><li><p>标准错误  (STDERR)     -2 默认输出到终端窗口 </p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[11:40:55 root@centos8 ~]<span class="hljs-comment">#ll /dev/std*</span><br>lrwxrwxrwx. 1 root root 15 11月 25 10:56 /dev/stderr -&gt; /proc/self/fd/2<br>lrwxrwxrwx. 1 root root 15 11月 25 10:56 /dev/stdin -&gt; /proc/self/fd/0<br>lrwxrwxrwx. 1 root root 15 11月 25 10:56 /dev/stdout -&gt; /proc/self/fd/1<br></code></pre></td></tr></table></figure><h3 id="6-2-I-O重定向redirect"><a href="#6-2-I-O重定向redirect" class="headerlink" title="6.2 I/O重定向redirect"></a>6.2 I/O重定向redirect</h3><p>I/O重定向：将默认的输入，输出或错误对应的设备改变，指向新的目标</p><h4 id="6-2-1-标准输出和错误重新定向"><a href="#6-2-1-标准输出和错误重新定向" class="headerlink" title="6.2.1 标准输出和错误重新定向"></a>6.2.1 标准输出和错误重新定向</h4><p>STDOUT和STDERR可以被重定向到文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">命令 操作符号 文件名<br></code></pre></td></tr></table></figure><p> 支持的操作符号包括：</p><p>1.1&gt;或&gt; 把STDOUT重定向到文件</p><p>2.&gt;|强制覆盖      #优先级大于 set -C</p><p>3.2&gt; 把STDERR重定向到文件</p><p>4.&amp;&gt; 把所有输出重定向到文件</p><p>以上如果文件已存在，文件内容会被覆盖</p><p>set -C 禁止将内容覆盖已有文件，但可追加</p><p>set +C 允许覆盖</p><p><strong>&gt;&gt;可以再原有内容基础上，追加内容</strong></p><p><strong>&gt;&gt; 追加标准输出重定向至文件</strong></p><p>2&gt;&gt;追加标准错误重定向至文件</p><p>标准输出和错误输出各自定向至不同位置</p><p>COMMAND&gt;/path/to/file.out2&gt;/path/to/error.out</p><p>合并标准输出和错误输出为同一个数据流进行重定向</p><p>&amp;&gt;  覆盖重定向</p><p>&amp;&gt;&gt; 追加重定向</p><p>command&gt;/path/to/file.out 2&gt;&amp;1 (顺序很重要)</p><p>command&gt;&gt;/path/to/file.out 2&gt;&amp;1</p><p>()合并多个程序的STDOUT</p><p>范例：清空/data/test.txt 该文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /dev/null &gt; /data/test.txt    <span class="hljs-comment">#具有通用性，可在多个shell中使用</span><br>&gt; /data/test.txt      <span class="hljs-comment">#可在bash中使用</span><br></code></pre></td></tr></table></figure><p>创建一个700M完全用0填充的大文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/zero of=/boot/bigfile bs=1M count=700                                       <br></code></pre></td></tr></table></figure><p>分别重定向</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:53:12 root@centos8 ~]<span class="hljs-comment">#ls /data/ /xxx &gt; out.log 2&gt; err.log</span><br>[03:21:20 root@centos8 ~]<span class="hljs-comment">#ls</span><br>公共  模板  视频  图片  文档  下载  音乐  桌面  anaconda-ks.cfg  err.log  initial-setup-ks.cfg  out.log<br>[03:21:21 root@centos8 ~]<span class="hljs-comment">#cat err.log </span><br><span class="hljs-built_in">ls</span>: 无法访问<span class="hljs-string">&#x27;/xxx&#x27;</span>: 没有那个文件或目录<br>[03:21:26 root@centos8 ~]<span class="hljs-comment">#cat out.log </span><br>/data/:<br>backup11:25:33-2021-11-25<br>f1.txt<br></code></pre></td></tr></table></figure><p>将标准输出和错误都重定向到同一个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[03:23:57 root@centos8 ~]<span class="hljs-comment">#ls /data/ /xxx &amp;&gt; /data/all.log</span><br>[03:24:44 root@centos8 ~]<span class="hljs-comment">#ls /data /xxx &gt; /data/all.log 2&gt;&amp;1</span><br>[03:25:38 root@centos8 ~]<span class="hljs-comment">#ls /data /xxx 2&gt; /data/all.log 1&gt;&amp;2</span><br>[03:25:46 root@centos8 ~]<span class="hljs-comment">#ls /data /xxx 2&gt;&amp;1 &gt; /data/all.log</span><br><span class="hljs-built_in">ls</span>: 无法访问<span class="hljs-string">&#x27;/xxx&#x27;</span>: 没有那个文件或目录<br></code></pre></td></tr></table></figure><p>将两个命令的结果输出到一个文件里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[03:29:01 root@centos8 ~]<span class="hljs-comment">#(pwd;hostname) &gt;&gt; all.log </span><br>[03:29:54 root@centos8 ~]<span class="hljs-comment">#cat all.log </span><br>/root<br>centos8<br></code></pre></td></tr></table></figure><h4 id="6-2-2-标准输入重定向"><a href="#6-2-2-标准输入重定向" class="headerlink" title="6.2.2 标准输入重定向"></a>6.2.2 标准输入重定向</h4><p>从文件中导入STDIN，代替当前终端的输入设备，使用&lt;来重定向标准输入某些命令能够接受从文件中导入的STDIN</p><p>tr 转换和删除字符</p><h5 id="6-2-2-1-tr命令"><a href="#6-2-2-1-tr命令" class="headerlink" title="6.2.2.1 tr命令"></a>6.2.2.1 tr命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">tr</span> [option]... set1 [set2]<br></code></pre></td></tr></table></figure><p>选项：</p><p>-c -C –complement:取字符集的补集</p><p>-d –delete:册除所有属于第一字符集的字符</p><p>-s–squeeze-repeats:把连续重复的字符以单独一个字符表示</p><p>-t –truncate-set1:将第一个字符集对应字符转化为第二字符集对应的字符</p><p>[:alnum:]：字母和数字</p><p>[:alpha:]：字母</p><p>[:digit:]：数字</p><p>[:lower:i]：小写字母</p><p>[:upper:]：大写字母</p><p>[:space:]：空白字符</p><p>[:print:]：可打印字符</p><p>[:punct:]：标点符号</p><p>[:graph:]：图形字符</p><p>[:cntrl:]：控制(非打印)字符</p><p>[:xdigit:]：十六进制字符</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#删除/etc/fstab里的所有abc字符</span><br>[11:00:07 root@centos8 ~]<span class="hljs-comment">#tr -d abc &lt; /etc/fstab</span><br><span class="hljs-comment">#把/etc/fstab里的所有a-z都换成大写的A-Z</span><br>[11:00:07 root@centos8 ~]<span class="hljs-built_in">tr</span> <span class="hljs-string">&#x27;a-z&#x27;</span> <span class="hljs-string">&#x27;A-Z&#x27;</span> &lt; /etc/fstab<br><br>[10:57:38 root@centos8 ~]<span class="hljs-comment">#cat df.log </span><br>文件系统           1K-块    已用     可用 已用% 挂载点<br>devtmpfs         1870428       0  1870428    0% /dev<br>tmpfs            1899504       0  1899504    0% /dev/shm<br>tmpfs            1899504    9612  1889892    1% /run<br>tmpfs            1899504       0  1899504    0% /sys/fs/cgroup<br>/dev/sda2      104806400 5310672 99495728    6% /<br>/dev/sda1        1038336  243480   794856   24% /boot<br>/dev/sda3       52403200  398436 52004764    1% /data<br>tmpfs             379900       0   379900    0% /run/user/0<br>tmpfs             379900       4   379896    1% /run/user/1000<br>[10:57:41 root@centos8 ~]<span class="hljs-comment">#tr -s &#x27; &#x27; &lt; df.log </span><br>文件系统 1K-块 已用 可用 已用% 挂载点<br>devtmpfs 1870428 0 1870428 0% /dev<br>tmpfs 1899504 0 1899504 0% /dev/shm<br>tmpfs 1899504 9612 1889892 1% /run<br>tmpfs 1899504 0 1899504 0% /sys/fs/cgroup<br>/dev/sda2 104806400 5310672 99495728 6% /<br>/dev/sda1 1038336 243480 794856 24% /boot<br>/dev/sda3 52403200 398436 52004764 1% /data<br>tmpfs 379900 0 379900 0% /run/user/0<br>tmpfs 379900 4 379896 1% /run/user/1000<br>[10:58:03 root@centos8 ~]<span class="hljs-comment">#tr -s &#x27; &#x27; + &lt; df.log </span><br>文件系统+1K-块+已用+可用+已用%+挂载点<br>devtmpfs+1870428+0+1870428+0%+/dev<br>tmpfs+1899504+0+1899504+0%+/dev/shm<br>tmpfs+1899504+9612+1889892+1%+/run<br>tmpfs+1899504+0+1899504+0%+/sys/fs/cgroup<br>/dev/sda2+104806400+5310672+99495728+6%+/<br>/dev/sda1+1038336+243480+794856+24%+/boot<br>/dev/sda3+52403200+398436+52004764+1%+/data<br>tmpfs+379900+0+379900+0%+/run/user/0<br>tmpfs+379900+4+379896+1%+/run/user/1000<br></code></pre></td></tr></table></figure><h5 id="6-2-2-2-标准输入重定向"><a href="#6-2-2-2-标准输入重定向" class="headerlink" title="6.2.2.2 标准输入重定向"></a>6.2.2.2 标准输入重定向</h5><p>利用&lt;可以将标准输入重定向</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:34:21 root@centos8 ~]<span class="hljs-comment">#cat &gt; test1                                      </span><br>hellow                                                                     <br>how are you                                                                <br>[10:34:43 root@centos8 ~]<span class="hljs-comment">#cat test1                                        </span><br>hellow                                                                     <br>how are you                                                                <br>[10:34:54 root@centos8 ~]<span class="hljs-comment">#cat &lt; test1 &gt; test2                              </span><br>[10:35:13 root@centos8 ~]<span class="hljs-comment">#cat test2                                        </span><br>hellow                                                                     <br>how are you           <br><span class="hljs-comment">####################################</span><br>[10:35:15 root@centos8 ~]<span class="hljs-comment">#echo 2+3+4 &gt; file                                </span><br>[10:39:49 root@centos8 ~]<span class="hljs-comment">#bc &lt; file                                        </span><br>9                                                                          <br>[10:39:54 root@centos8 ~]<span class="hljs-comment">#cat file                                         </span><br>2+3+4                           <br></code></pre></td></tr></table></figure><h5 id="6-2-2-3-把多行重定向"><a href="#6-2-2-3-把多行重定向" class="headerlink" title="6.2.2.3 把多行重定向"></a>6.2.2.3 把多行重定向</h5><p>使用 &lt;&lt; 终止词命令从键盘把多行重定向给STDIN，直到终止词位置之前的所有文本都发送给STDIN，有时被称为就地文本(here documents)</p><p>其中终止词可以是任何一个或多个符号，比如:!，EOF (End Of File) ,hahaha等，其中EOF比较常用</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:40:03 root@centos8 ~]<span class="hljs-comment">#cat &gt; t.txt &lt;&lt;!</span><br>&gt; <span class="hljs-built_in">test</span><br>&gt; hellow<br>&gt; !<br></code></pre></td></tr></table></figure><h3 id="6-3-管道"><a href="#6-3-管道" class="headerlink" title="6.3 管道"></a>6.3 管道</h3><h4 id="6-3-1-管道"><a href="#6-3-1-管道" class="headerlink" title="6.3.1 管道"></a>6.3.1 管道</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:12:56 root@centos8 ~]<span class="hljs-comment">#echo 1+2 | bc</span><br>3<br>[11:13:36 root@centos8 ~]<span class="hljs-comment">#bc &lt; echo 1+2</span><br>-bash: <span class="hljs-built_in">echo</span>: 没有那个文件或目录<br></code></pre></td></tr></table></figure><p>范例：管道对标准输出生效，标准错误不生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[04:55:37 root@centos8 ~]<span class="hljs-comment">#ls /data /xxx</span><br><span class="hljs-built_in">ls</span>: 无法访问<span class="hljs-string">&#x27;/xxx&#x27;</span>: 没有那个文件或目录<br>/data:<br>all.log<br>[04:55:41 root@centos8 ~]<span class="hljs-comment">#ls /data /xxx | tr -s &#x27;a-z&#x27; &#x27;A-Z&#x27;</span><br><span class="hljs-built_in">ls</span>: 无法访问<span class="hljs-string">&#x27;/xxx&#x27;</span>: 没有那个文件或目录<br>/DATA:<br>AL.LOG<br></code></pre></td></tr></table></figure><p>范例：用&amp;合并标准输出和错误输出为同一个数据流进行重定向的两种用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[04:56:04 root@centos8 ~]<span class="hljs-comment">#ls /data /xxx 2&gt;&amp;1| tr -s &#x27;a-z&#x27; &#x27;A-Z&#x27;</span><br>LS: 无法访问<span class="hljs-string">&#x27;/X&#x27;</span>: 没有那个文件或目录<br>/DATA:<br>AL.LOG<br><br>[04:59:48 root@centos8 ~]<span class="hljs-comment">#ls /data /xxx |&amp; tr -s &#x27;a-z&#x27; &#x27;A-Z&#x27;</span><br>LS: 无法访问<span class="hljs-string">&#x27;/X&#x27;</span>: 没有那个文件或目录<br>/DATA:<br>AL.LOG<br></code></pre></td></tr></table></figure><p>范例：更改密码,减少交互。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[05:00:22 root@centos8 ~]<span class="hljs-comment">#echo test | passwd --stdin yh</span><br>更改用户 yh 的密码 。<br>passwd：所有的身份验证令牌已经成功更新。<br>[05:10:14 root@centos8 ~]<span class="hljs-comment">#echo test1 | passwd --stdin yh &gt; /dev/null</span><br>[05:10:20 root@centos8 ~]<span class="hljs-comment"># 结果输出给/dev/null 就不会有提示</span><br></code></pre></td></tr></table></figure><h3 id="6-3-2-管道中的-符号"><a href="#6-3-2-管道中的-符号" class="headerlink" title="6.3.2 管道中的-符号"></a>6.3.2 管道中的-符号</h3><p>管道中有时会使用-符号</p><p>示例：</p><p>将/home里面的文件打包，但打包的数据不是记录到文件，而是传送到stdout，经过管道后，将tar-cvf-/home传送给后面的tar-xvf-，后面的这个-则是取前一个命令的stdout，因此，就不需要使用临时file了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -cvf - /home | tar -xvf -<br></code></pre></td></tr></table></figure><h3 id="6-3-3-tee-命令"><a href="#6-3-3-tee-命令" class="headerlink" title="6.3.3 tee 命令"></a>6.3.3 tee 命令</h3><p>用法：tee [选项]… [文件]…<br>将标准输入复制到每个指定文件，并显示到标准输出。</p><p>利用tee命令可以重定向到多个目标</p><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">命令1 | <span class="hljs-built_in">tee</span> [-a] filename | 命令2<br></code></pre></td></tr></table></figure><p>以上可以把命令1的stdout保存在文件中，作为命令2的输入</p><p>选项： -a 追加</p><p>功能    1：保存不同阶段的输出</p><p>​            2：复杂管道的故障排除</p><p>​            3：同时查看和记录输出</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[05:39:57 root@centos8 ~]<span class="hljs-comment">#cat test.log </span><br>hello<br>[05:40:07 root@centos8 ~]<span class="hljs-comment">#echo hello world | tee -a test.log </span><br>hello world<br>[05:40:23 root@centos8 ~]<span class="hljs-comment">#cat test.log </span><br>hello<br>hello world<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[05:49:04 root@centos8 ~]<span class="hljs-comment">#cat  &lt;&lt;EOF | tee /etc/motd</span><br>&gt; hellow<br>&gt; <span class="hljs-built_in">test</span> <br>&gt; EOF<br>hellow<br><span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p>练习：求1+2+3+…+100的总和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[05:55:54 root@centos8 ~]<span class="hljs-comment">#echo &#123;1..100&#125;</span><br>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100<br>[05:58:50 root@centos8 ~]<span class="hljs-comment">#echo &#123;1..100&#125; | tr &#x27; &#x27; +</span><br>1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100<br>[05:59:00 root@centos8 ~]<span class="hljs-comment">#echo &#123;1..100&#125; | tr &#x27; &#x27; + | bc</span><br>5050<br>[06:05:27 root@centos8 ~]<span class="hljs-comment">#seq -s + 1 100 | bc</span><br>5050<br>[06:03:09 root@centos8 ~]<span class="hljs-comment">#echo &#123;1..100..2&#125; | tr &#x27; &#x27; + | bc  #100内奇数的和</span><br>2500 <br>[06:06:34 root@centos8 ~]<span class="hljs-comment">#seq -s + 1 2 100 | bc</span><br>2500<br></code></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>文件管理</title>
    <link href="/yindong.github.io/2022/07/23/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <url>/yindong.github.io/2022/07/23/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="3-文件管理"><a href="#3-文件管理" class="headerlink" title="3 文件管理"></a>3 文件管理</h2><h3 id="3-1-文件系统与目录结构"><a href="#3-1-文件系统与目录结构" class="headerlink" title="3.1 文件系统与目录结构"></a>3.1 文件系统与目录结构</h3><ul><li>文件和目录被组织成一个单根倒置树结构</li><li>文件系统从根目录下开始，用”/“表示</li><li>根文件系统(rootfs)：root filesystem</li><li>标准Linux文件系统(ext4)，文件名称大小写敏感，例如：MALL,Mail,mail,mAiL</li><li>以.开头的文件为隐藏文件</li><li>路径分隔的/</li><li>文件名最长255个字节</li><li>包括路径在内文件名最长4095个字节</li><li>蓝色–&gt;目录  绿色–&gt;可执行文件 红色–&gt;压缩文件 浅蓝色–&gt;链接文件 灰色–&gt;其它文件</li><li>除斜杠和NUL，所有字符都有效. 但使用特殊字符的目录名和文件不推荐使用，有些字符需要用引号来引用</li><li>每个文件都有两类相关数据</li></ul><p>​        元数据: metadata</p><p>​         数据：data</p><p>Linux的文件系统分层结构：FHS (Filesystem Hierarchy Standard)</p><p>参考文档：<a href="http://www.pathname.com/fhs/">http://www.pathname.com/fhs/</a></p><h3 id="3-2-常见的文件系统目录功能"><a href="#3-2-常见的文件系统目录功能" class="headerlink" title="3.2 常见的文件系统目录功能"></a>3.2 常见的文件系统目录功能</h3><p>/boot:引导文件存放目录，内核文件(vmlinuz)、引导加载器(bootloader, grub)都存放于此目录</p><p>/bin:所有用户使用的基本命令;不能关联至独立分区，OS启动即会用到的程序</p><p>/sbin:管理类的基本命令;不能关联至独立分区，OS启动即会用到的程序</p><p>/lib:启动时程序依赖的基本共享库文件以及内核模块文件(/lib/modules)</p><p>/lib64:专用于x86_64系统上的辅助共享库文件存放位置</p><p>/etc:配置文件目录</p><p>/home/USERNAME:普通用户家目录</p><p>/root:管理员的家目录</p><p>/media:便携式移动设备挂载点</p><p>/mnt:临时文件系统挂载点</p><p>/dev:设备文件及特殊文件存储位置</p><p>​         b: block devide，随机访问</p><p>​         c: character device，线性访问</p><p>/opt:第三方应用程序的安装位置</p><p>/sry:系统上运行的服务用到的数据</p><p>/tmp:临时文件存储位置</p><p>/usr: universal shared, read-only data</p><p>  bin:保证系统拥有完整功能而提供的应用程序</p><p>  sbin:</p><p>  lib:..32位使用</p><p>  lib64:只存在64位系统</p><p>  include: c程序的头文件(header files)</p><p>  share:结构化独立的数据，例如doc, man等</p><p>​       local:第三方应用程序的安装位置</p><p>​       bin, sbin, lib, lib64, etc, share</p><p>/var: variable data files</p><p>   cache:应用程序缓存数据目录</p><p>   lib:应用程序状态信息数据</p><p>   local:专用于为/usr/local下的应用程序存储可变数据</p><p>   lock:锁文件</p><p>   log:日志目录及文件</p><p>   opt:专用于为/opt下的应用程序存储可变数据</p><p>   run:运行中的进程相关数据,通常用于存储进程pid文件</p><p>   spool:应用程序数据池</p><p>   tmp:保存系统两次重启之间产生的临时数据</p><p>/proc:用于输出内核与进程信息相关的虚拟文件系统</p><p>/sys:用于输出当前系统上硬件设备相关信息虚拟文件系统</p><p>/selinux: security enhanced Linux，selinux相关的安全策略等信息的存储位置</p><p><strong>CentOS 7以后版本目录结构变化</strong></p><ul><li>/bin和/usr/bin</li><li>/sbin和/usr/sbin</li><li>/lib和/usr/lib</li><li>/lib64和/usr/lib64</li></ul><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[04:04:36 root@centos8 ~]<span class="hljs-comment">#ls /bin /sbin /lib /lib64 -ld</span><br>lrwxrwxrwx. 1 root root 7 11月  3 2020 /bin -&gt; usr/bin<br>lrwxrwxrwx. 1 root root 7 11月  3 2020 /lib -&gt; usr/lib<br>lrwxrwxrwx. 1 root root 9 11月  3 2020 /lib64 -&gt; usr/lib64<br>lrwxrwxrwx. 1 root root 8 11月  3 2020 /sbin -&gt; usr/sbin<br></code></pre></td></tr></table></figure><h3 id="3-3-应用程序的组成部分"><a href="#3-3-应用程序的组成部分" class="headerlink" title="3.3 应用程序的组成部分"></a>3.3 应用程序的组成部分</h3><p>二进制程序:/bin,/sbin,/usr/bin, /usr/sbin,/ usr/local/bin, /usr/local/sbin</p><p>库文件:/lib,/lib64, /usr/lib, / usr/lib64 ,/usr/local/lib,/usr/local/lib64</p><p>配置文件:/etc,/etc/DIRECTORY,/usr/local/etc</p><p>帮助文件:/usr/share/man, /usr/share/doc, /usr/local/share/man,/usr/local/share/doc</p><h3 id="3-4-Linux下的文件类型"><a href="#3-4-Linux下的文件类型" class="headerlink" title="3.4 Linux下的文件类型"></a>3.4 Linux下的文件类型</h3><ul><li>-普通文件</li><li>d   目录文件</li><li>b   块设备</li><li>c    字符设备</li><li>l     符号链接文件</li><li>p   管道文件plpe</li><li>s   套接字文件socket</li></ul><p><strong>dos2unix</strong>     windows文本格式转换成linux格式</p><h2 id="4-文件操作命令"><a href="#4-文件操作命令" class="headerlink" title="4 文件操作命令"></a>4 文件操作命令</h2><h3 id="4-1-显示当前工作目录"><a href="#4-1-显示当前工作目录" class="headerlink" title="4.1 显示当前工作目录"></a>4.1 显示当前工作目录</h3><p>每个shell和系统进程都有一个当前的工作目录CWD: current work directory</p><p>显示当前shell CWD的绝对路径</p><p>pwd命令: printing working directory.···················································································································</p><ul><li>-P显示真实物理路径</li><li>-L显示链接路径（默认〕</li></ul><h3 id="4-2-绝对和相对路径"><a href="#4-2-绝对和相对路径" class="headerlink" title="4.2 绝对和相对路径"></a>4.2 绝对和相对路径</h3><ul><li>绝对路径</li></ul><p>​        以正斜杠开始，完整的文件位置路径，可用于任何想指定一个文件名的时候。</p><ul><li>相对路径</li></ul><p>​        不以斜线开始，指定相对于当前工作目录或某目录的位置，可以作为一个简短的形式指定一个文件名。</p><p>基名: basename, 只取文件名而不要路径</p><p>目录名：dirname，只取路径，不要文件名</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[04:23:23 root@centos8 ~]<span class="hljs-comment">#basename /etc/sysconfig/network</span><br>network<br>[04:41:01 root@centos8 ~]<span class="hljs-comment">#dirname /etc/sysconfig/network</span><br>/etc/sysconfig<br></code></pre></td></tr></table></figure><h3 id="4-3-更改目录"><a href="#4-3-更改目录" class="headerlink" title="4.3 更改目录"></a>4.3 更改目录</h3><p>命令cd : change directory改变目录</p><p>选项: -Р切换至物理路径，而非软链接目录</p><p>可以使用绝对或相对路径</p><ul><li>切换至父目录:cd ..</li><li>切换至当前用户主目录:cd</li><li>切换至以前的工作目录: cd -</li></ul><p>相关的环境变量：</p><ul><li>PWD：当前目录路径</li><li>OLDPWD：上一次目录路径</li></ul><h3 id="4-4-列出目录内容-ls"><a href="#4-4-列出目录内容-ls" class="headerlink" title="4.4 列出目录内容 ls"></a>4.4 列出目录内容 ls</h3><p>ls命令可以列出当前目录的内容或指定目录</p><p>常见选项：</p><ul><li>-a 包含隐藏文件</li><li>-l 显示额外的信息</li><li>-R 目录递归</li><li>-ld 目录和符号链接信息</li><li>-1 文件分行显示</li><li>-S 按从大到小排序</li><li>-t 按mtime排序</li><li>-u 配个-t选项，显示并按atime从新到旧排序</li><li>-U 按目录存放顺序显示</li><li>-X 按文件后缀排序</li></ul><h3 id="4-5-查看文件状态-stat"><a href="#4-5-查看文件状态-stat" class="headerlink" title="4.5 查看文件状态 stat"></a>4.5 查看文件状态 stat</h3><p>文件相关信息：metadata，data</p><p>每个文件有的三个时间戳：</p><ul><li>access time 访问时间， atlme，读取文件内容</li><li>modlfy time 修改时间，mtime，改变文件内容（数据）</li><li>change time 改变时间， ctime， 元数据发生改变</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[06:45:14 root@centos8 ~]<span class="hljs-comment">#stat anaconda-ks.cfg </span><br>  文件：anaconda-ks.cfg<br>  大小：1486      块：8          IO 块：4096   普通文件<br>设备：802h/2050dInode：201944433   硬链接：1<br>权限：(0600/-rw-------)  Uid：(    0/    root)   Gid：(    0/    root)<br>环境：system_u:object_r:admin_home_t:s0<br>最近访问：2021-08-23 13:41:36.984990517 +0800<br>最近更改：2021-08-23 13:39:38.070235084 +0800<br>最近改动：2021-08-23 13:39:38.070235084 +0800<br>创建时间：-<br></code></pre></td></tr></table></figure><h3 id="4-6-确定文件内容-file"><a href="#4-6-确定文件内容-file" class="headerlink" title="4.6 确定文件内容 file"></a>4.6 确定文件内容 file</h3><p>文件可以包含多种类型的数据，使用file命令检查文件的类型，然后确定适当的打开命令或应用程序使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">file [options] &lt;filename&gt;...<br></code></pre></td></tr></table></figure><p>常用选项：</p><ul><li>-b 列出文件辨识结果时，不显示文件名称</li><li>-f filelist 列出文件filelist中文件名的文件类型</li><li>-F 使用指定分隔符号替换输出文件名后默认的”:”分隔符</li><li>-L 查看对应软链接对应文件的文件类型</li><li>–help 显示命令在线帮助</li></ul><h3 id="4-7-文件通配符模式-wild-card-pattern"><a href="#4-7-文件通配符模式-wild-card-pattern" class="headerlink" title="4.7 文件通配符模式 wild-card pattern"></a>4.7 文件通配符模式 wild-card pattern</h3><p>文件通配符可以用来匹配符合条件的多个文件，方便批理管理文件通配符采有特定的符号，表示特定的含义，此特符号称为元字符</p><p>常见的通配符如下:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> 匹配零个或多个字符<br>? 匹配任何单个字符<br>~ 当前用户家目录<br>~mage 用户mage家目录<br>~+和．当前工作目录<br>~- 前一个工作目录<br>[0-9] 匹配数字范围<br>[<span class="hljs-symbol">a-z</span>]:<span class="hljs-link">字母</span><br>[<span class="hljs-symbol">A-Z</span>]:<span class="hljs-link">字母</span><br>[wang] 匹配列表中的任何的一个字符<br>[^wang]匹配列表中的所有字符以外的字符<br></code></pre></td></tr></table></figure><p>另外还有在Linux系统中预定义的字符类: man 7 glob</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[<span class="hljs-symbol">:digit:</span>]:<span class="hljs-link">任意数字，相当于0-9</span><br>[<span class="hljs-symbol">:lower:</span>]:<span class="hljs-link">任意小写字母,表示a-z</span><br>[<span class="hljs-symbol">:upper:</span>]:<span class="hljs-link">任意大写字母,表示A-Z</span><br>[<span class="hljs-symbol">:alpha:</span>]:<span class="hljs-link">任意大小写字母</span><br>[<span class="hljs-symbol">:alnum:</span>]:<span class="hljs-link">任意数字或字母</span><br>[<span class="hljs-symbol">:blank:</span>]:<span class="hljs-link">水平空白字符</span><br>[<span class="hljs-symbol">:space:</span>]:<span class="hljs-link">水平或垂直空白字符</span><br>[<span class="hljs-symbol">:punct:</span>]:<span class="hljs-link">标点符号</span><br>[<span class="hljs-symbol">:print:</span>]:<span class="hljs-link">可打印字符</span><br>[<span class="hljs-symbol">:cntrl:</span>]:<span class="hljs-link">控制（非打印)字符</span><br>[<span class="hljs-symbol">:graph:</span>]:<span class="hljs-link">图形字符</span><br>[<span class="hljs-symbol">:xdigit:</span>]:<span class="hljs-link">十六进制字符</span><br></code></pre></td></tr></table></figure><p>范例:</p><p>1、显示/etc目录下所有以l开头，以一个小写字母结尾，且中间出现至少一位数字的文件或目录</p><p>2、显示/etc目录下以任意一位数字开头，且以非数字结尾的文件或目录</p><p>3、显示/etc/目录下以非字母开头，后面跟了一个字母及其它任意长度任意字符的文件或目录</p><p>4、显示/etc/目录下所有以rc开头，并后面是0-6之间的数字，其它为任意字符的文件或目录</p><p>5、显示/etc目录下，所有.conf结尾,且以m.n,r.p开头的文件或目录</p><p>6、只显示/root下的隐藏文件和目录</p><p>7、只显示/etc下的非隐藏目录</p><h3 id="4-8-创建空文件和刷新时间"><a href="#4-8-创建空文件和刷新时间" class="headerlink" title="4.8 创建空文件和刷新时间"></a>4.8 创建空文件和刷新时间</h3><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> [option]... file...<br></code></pre></td></tr></table></figure><p>选项说明:</p><ul><li>-a 仅改变atime和ctime </li><li>-m 仅改变mtime和ctime</li><li>-t [[CC]YY]MMDDhhmm[.ss] 指定atime和mtime的时间戳</li><li>-c 如果文件不存在，则不予创建</li></ul><h3 id="4-9-复制文件和目录"><a href="#4-9-复制文件和目录" class="headerlink" title="4.9 复制文件和目录"></a>4.9 复制文件和目录</h3><p>利用cp命令可以实现文件或目录的复制</p><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> [option]... [-T] SOURCE DEST<br><span class="hljs-built_in">cp</span> [option]... SOURCE... DIRECTORY<br><span class="hljs-built_in">cp</span> [option]... -t DIRECTORY SOURCE...<br></code></pre></td></tr></table></figure><p>常用选项</p><ul><li>-i    覆盖前提示</li><li>-n  不覆盖，注意两者顺序</li><li>-r,R  递归复制命令及内部的所有内容</li><li>-a   归档，相当于-dR –preserv=all</li><li>-d    –no-dereference –preserv=links 不复制原文件，只复制链接名</li><li>–preserv[=ATTR_LIST]</li></ul><p>​          mode:权限 ；ownership:属主属组；…</p><ul><li>p等同–preserv=mode,ownership,timestamp</li></ul><p>​         -v  –verbose</p><ul><li>-f    –force</li><li>u    –update只复制源比目标更新文件或目标不存在的文件</li><li>-b    目标存在，覆盖前先备份，形式为filename~</li><li>–backup=numbered目标存在，覆盖前先备份加数字后缀</li></ul><p><strong>范例</strong>：将/etc目录下的所有文件备份到/data独立的子目录下，并要求子目录格式为backupYYYY–mm–dd，备份过程可见。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[06:29:14 root@centos8 ~]<span class="hljs-comment">#cp -av /etc/ /data/backup`date +%F`</span><br></code></pre></td></tr></table></figure><h3 id="4-10-移动和重命名文件"><a href="#4-10-移动和重命名文件" class="headerlink" title="4.10 移动和重命名文件"></a>4.10 移动和重命名文件</h3><p>mv命令可以实现文件或目录的移动和改名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> [option]... [-T] <span class="hljs-built_in">source</span> dest<br><span class="hljs-built_in">mv</span> [option]... <span class="hljs-built_in">source</span>... dircetory<br><span class="hljs-built_in">mv</span> [option]... -t dircetory <span class="hljs-built_in">source</span>...<br></code></pre></td></tr></table></figure><p>常用选项：</p><ul><li>-i   交互式</li><li>-f   强制</li><li>-b   目标存在，覆盖前先备份</li></ul><p><strong>批量修改文件名</strong> ：rename</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rename [options] &lt;expression&gt; &lt;replacement&gt; &lt;file&gt; ...<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#为所有的txt文件加上.bak后缀</span><br>[10:13:04 root@centos8 data]<span class="hljs-comment">#ls</span><br>f10.txt  f1.txt  f2.txt  f3.txt  f4.txt  f5.txt  f6.txt  f7.txt  f8.txt  f9.txt<br>[10:13:05 root@centos8 data]<span class="hljs-comment">#rename txt txt.bak *</span><br>[10:17:00 root@centos8 data]<span class="hljs-comment">#ls</span><br>f10.txt.bak  f1.txt.bak  f2.txt.bak  f3.txt.bak  f4.txt.bak  f5.txt.bak  f6.txt.bak  f7.txt.bak  f8.txt.bak  f9.txt.bak<br><br><span class="hljs-comment">#去掉所有文件的.bak后缀</span><br>[10:22:50 root@centos8 data]<span class="hljs-comment">#rename txt.bak txt *</span><br>[10:22:57 root@centos8 data]<span class="hljs-comment">#ls</span><br>f10.txt  f1.txt  f2.txt  f3.txt  f4.txt  f5.txt  f6.txt  f7.txt  f8.txt  f9.txt<br></code></pre></td></tr></table></figure><h3 id="4-11-删除文件"><a href="#4-11-删除文件" class="headerlink" title="4.11 删除文件"></a>4.11 删除文件</h3><p>使用rm命令可以删除文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> [option]... file...<br></code></pre></td></tr></table></figure><p>常用选项：</p><ul><li>-i   交互式</li><li>-f   强制删除</li><li>-r   递归</li><li>–no-preserver-root   删除/</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf /*<br></code></pre></td></tr></table></figure><p>范例：删除特殊文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">将名为<span class="hljs-string">&#x27;/data/-f&#x27;</span>的文件删除<br><span class="hljs-built_in">rm</span> -- -f<br><span class="hljs-built_in">rm</span> ./-f<br><span class="hljs-built_in">rm</span> -f /data/-f<br><span class="hljs-built_in">rm</span> -f -f 此方法错误，因文件名跟选项相仿所以无法删除。<br></code></pre></td></tr></table></figure><p>请注意，如果使用rm 来删除文件，通常仍可以将该文件恢复原状。如果想保证<br>该文件的内容无法还原，请考虑使用shred。</p><p>常见选项：</p><p>-z 最后一次覆盖添加0，以隐藏覆盖操作</p><p>-v 能够显示操作进度</p><p>-u 覆盖后截断并删除文件</p><p>-n 指定覆盖文件内容的次数(默认值是3次)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:09:53 root@centos8 data]<span class="hljs-comment">#shred -zvun 4 passwd.txt </span><br><span class="hljs-built_in">shred</span>: passwd.txt：第1 次，共5 次 (random)...<br><span class="hljs-built_in">shred</span>: passwd.txt：第2 次，共5 次 (ffffff)...<br><span class="hljs-built_in">shred</span>: passwd.txt：第3 次，共5 次 (000000)...<br><span class="hljs-built_in">shred</span>: passwd.txt：第4 次，共5 次 (random)...<br><span class="hljs-built_in">shred</span>: passwd.txt：第5 次，共5 次 (000000)...<br><span class="hljs-built_in">shred</span>: passwd.txt：正在删除<br><span class="hljs-built_in">shred</span>: passwd.txt：名称已更改为 0000000000<br><span class="hljs-built_in">shred</span>: 0000000000：名称已更改为 000000000<br><span class="hljs-built_in">shred</span>: 000000000：名称已更改为 00000000<br><span class="hljs-built_in">shred</span>: 00000000：名称已更改为 0000000<br><span class="hljs-built_in">shred</span>: 0000000：名称已更改为 000000<br><span class="hljs-built_in">shred</span>: 000000：名称已更改为 00000<br><span class="hljs-built_in">shred</span>: 00000：名称已更改为 0000<br><span class="hljs-built_in">shred</span>: 0000：名称已更改为 000<br><span class="hljs-built_in">shred</span>: 000：名称已更改为 00<br><span class="hljs-built_in">shred</span>: 00：名称已更改为 0<br><span class="hljs-built_in">shred</span>: passwd.txt：已删除<br>[10:10:26 root@centos8 data]<span class="hljs-comment">#ll</span><br>总用量 0<br></code></pre></td></tr></table></figure><p>范例：设置rm别名为mv -t $DIR</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:18:06 root@centos8 ~]<span class="hljs-comment">#alias rm=&#x27;DIR=/date/backup`date +%F-%T`;mkdir $DIR;mv -t $DIR&#x27;</span><br><span class="hljs-comment">#设置变量DIR，创建$DIR文件夹，设置别名</span><br></code></pre></td></tr></table></figure><h3 id="4-12-目录操作"><a href="#4-12-目录操作" class="headerlink" title="4.12 目录操作"></a>4.12 目录操作</h3><h4 id="4-12-1-显示目录树-tree"><a href="#4-12-1-显示目录树-tree" class="headerlink" title="4.12.1 显示目录树 tree"></a>4.12.1 显示目录树 tree</h4><p>常见选项：</p><ul><li>-d：只显示目录</li><li>-L level：指定显示的层级数目</li><li>-P pattern：只显示由指定wild-card pattern匹配到的路径</li></ul><h4 id="4-12-2-创建目录mkdir"><a href="#4-12-2-创建目录mkdir" class="headerlink" title="4.12.2 创建目录mkdir"></a>4.12.2 创建目录mkdir</h4><p>常用选项：</p><ul><li>-p：存在于不报错，且可自动创建所需的各目录</li><li>-v：显示详细信息</li><li>-m MODE：创建目录时直接指定权限</li></ul><h4 id="4-12-3-删除空目录rmdir"><a href="#4-12-3-删除空目录rmdir" class="headerlink" title="4.12.3 删除空目录rmdir"></a>4.12.3 删除空目录rmdir</h4><p>常见选项：</p><ul><li>-p 递归删除父空目录</li><li>-v 显示详细信息</li></ul><p>注意：rmdir只能删除空目录，如果想删除非空目录，可以 使用rm -r命令，递归删除目录树</p><p>练习</p><p>1：创建/testdir/dir1/x,/testdir/dir1/y,/testdir/dir1/x/a,/testdir/dir1/x/b,/testdir/dir1/y/a,/testdir/dir1/y/b</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bahs">[02:48:13 root@centos8 /]#mkdir -pv /testdir/dir1/&#123;x,y&#125;/&#123;a,b&#125;<br>mkdir: 已创建目录 &#x27;/testdir&#x27;<br>mkdir: 已创建目录 &#x27;/testdir/dir1&#x27;<br>mkdir: 已创建目录 &#x27;/testdir/dir1/x&#x27;<br>mkdir: 已创建目录 &#x27;/testdir/dir1/x/a&#x27;<br>mkdir: 已创建目录 &#x27;/testdir/dir1/x/b&#x27;<br>mkdir: 已创建目录 &#x27;/testdir/dir1/y&#x27;<br>mkdir: 已创建目录 &#x27;/testdir/dir1/y/a&#x27;<br>mkdir: 已创建目录 &#x27;/testdir/dir1/y/b&#x27;<br></code></pre></td></tr></table></figure><h2 id="5-文件元数据和节点表结构"><a href="#5-文件元数据和节点表结构" class="headerlink" title="5 文件元数据和节点表结构"></a>5 文件元数据和节点表结构</h2><h3 id="5-1-inode表结构"><a href="#5-1-inode表结构" class="headerlink" title="5.1 inode表结构"></a>5.1 inode表结构</h3><p>每个文件的属性信息，比如: 文件的大小，时间，类型等，称为元数据(meta data)。这些元数据是存放在node (index node）表中。node 表中有很多条记录组成，第一条记录对应的存放了一个文件的元数据信息第一个node表记录对应的保存了以下信息:</p><ul><li>inode number 节点号</li><li>文件类型</li><li>权限</li><li>UID</li><li>GID</li><li>链接数(指向这个文件名路径名称个数)</li><li>该文件的大小和不同的时间戳</li><li>指向磁盘上文件的数据块指针</li><li>有关文件的其他数据</li></ul><p><strong>目录</strong></p><p>目录是个特殊文件，文件内容保存了目录中文件的列表及inode number</p><ul><li>文件引用一个是inode号</li><li>人是通过文件名来引用一个文件</li><li>一个目录时目录下的文件名和文件inode号之间的映射</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[04:01:15 root@centos8 /]<span class="hljs-comment">#df /boot</span><br>文件系统         1K-块   已用   可用 已用% 挂载点<br>/dev/sda1      1038336 243480 794856   24% /boot<br>[04:03:16 root@centos8 /]<span class="hljs-comment">#df -i /boot</span><br>文件系统        Inode   已用(I) 可用(I) 已用(I)% 挂载点<br>/dev/sda1     524288   310    523978   1%     /boot  <br><span class="hljs-comment">#如果inode号（节点编号）用完在创建文件也会提示空间不足</span><br></code></pre></td></tr></table></figure><h3 id="5-2-硬链接ln"><a href="#5-2-硬链接ln" class="headerlink" title="5.2 硬链接ln"></a>5.2 硬链接ln</h3><p>硬链接本质上就是给一个文件起一个新的名称，实质是同一个文件</p><p>硬链接特性</p><ul><li>创建硬链接会增加额外的记录项以引用文件</li><li>对应于同一文件系统上一个物理文件</li><li>每个目录引用相同的inode号</li><li>创建时链接数递增</li><li>删除文件时：rm命令递减计数的链接。文件要存在，至少有一个链接数，当链接数为零时，该文件被删除</li><li>不能跨越驱动器或分区</li><li>不支持对目录创建硬链接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> filename [linkname]<br></code></pre></td></tr></table></figure><h3 id="5-3-符号（软）链接"><a href="#5-3-符号（软）链接" class="headerlink" title="5.3 符号（软）链接"></a>5.3 符号（软）链接</h3><p>一个符号链接指向另一个文件，就像windows中快捷方式，软链接文件和原文件本质上不是同一个文件。</p><p><strong>软链接特点</strong></p><ul><li>一个符号链接的内容是它引用文件的名称</li><li>可以对目录创建软链接</li><li>可以跨分区的文件实现</li><li>指向的是另一个文件的路径；其大小为指向的路径字符串的长度；不增加或减少目标文件inode的引用计数</li><li>软链接如果使用相对路径，是相当于原文件的路径，而非相对于当前目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s filename [linkname]<br></code></pre></td></tr></table></figure><h3 id="5-4-硬链接和软链接区别总结"><a href="#5-4-硬链接和软链接区别总结" class="headerlink" title="5.4 硬链接和软链接区别总结"></a>5.4 硬链接和软链接区别总结</h3><p>1.本质：硬链接本质是同一个文件</p><p>​               软链接本质不是同一个文件</p><p>2.跨设备：硬链接不支持</p><p>​                   软链接支持</p><p>3.inode：硬链接相同</p><p>​                  软链接不同</p><p>4.链接数：硬链接创建新的硬链接，链接数会增加，删除硬链接会减少</p><p>​                   软链接创建或删除，链接数不会变化</p><p>5.文件夹：硬链接不支持</p><p>​                   软链接支持</p><p>6.相对路径：硬链接 原始文件相对路径是相对于当前工作目录</p><p>​                       软链接 原始文件相对路径是相对于链接文件的相对路径</p><p>7.删除源文件：硬链接不受影响，链接数减一，链接文件访问不受影响</p><p>​                           软链接文件将无法访问</p><p>8.文件类型：硬链接和源文件相同</p><p>​                       软链接；链接文件和源文件无关</p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>获取帮助</title>
    <link href="/yindong.github.io/2022/07/13/%E8%8E%B7%E5%8F%96%E5%B8%AE%E5%8A%A9/"/>
    <url>/yindong.github.io/2022/07/13/%E8%8E%B7%E5%8F%96%E5%B8%AE%E5%8A%A9/</url>
    
    <content type="html"><![CDATA[<h2 id="1-获得帮助"><a href="#1-获得帮助" class="headerlink" title="1 获得帮助"></a>1 获得帮助</h2><p>获得帮助的能力决定了技术的能力！</p><p>多层次的帮助</p><ul><li>whatis</li><li>command –help</li><li>man and info</li><li>/usr/share/doc/</li><li>Red Hat documentation</li><li>其它网站和搜索</li></ul><h3 id="1-1-whatis"><a href="#1-1-whatis" class="headerlink" title="1.1 whatis"></a>1.1 whatis</h3><p>whatis 使用数据库来显示命令的简短描述, 系统刚安装后不可立即使用，需要制作数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Centos7 版本以后</span><br>mandb<br><span class="hljs-comment">#Centos6 版本以前</span><br>makewhatis<br></code></pre></td></tr></table></figure><h3 id="1-2-查看命令的帮助"><a href="#1-2-查看命令的帮助" class="headerlink" title="1.2 查看命令的帮助"></a>1.2 查看命令的帮助</h3><p>内部命令: </p><ul><li>help COMMAND</li><li>man bash</li></ul><p>外部命令和软件: </p><ul><li><p>COMMAND –helo 或 COMMAND -h</p></li><li><p>使用手册（manual）</p><p>man COMMAND</p></li><li><p>信息页 info COMMAND</p></li><li><p>程序自身的帮助文档 README INSTALL Changelog</p></li><li><p>程序官方文档 官方站点 ： Documentation</p></li><li><p>发行版的官方文档</p></li><li><p>（7）Google</p></li></ul><h3 id="1-3-man命令"><a href="#1-3-man命令" class="headerlink" title="1.3 man命令"></a>1.3 man命令</h3><p>man提供命令帮助的文件，手册也存放在/usr/share/man；几乎每个命令都有man的“页面”</p><p>中文man需要安装包man-pages-zh-CN； man页面分组为不同的”章节“，统称为Linux手册，man 1 man</p><ul><li>1：用户命令</li><li>2：系统调用（内核提供的函数）</li><li>3：库调用（程序库中的函数）</li><li>4：设备文件及特殊文件（通常位于/dev）</li><li>5：文件格式和规范：如/etc/passwd</li><li>6：游戏</li><li>7：杂项（包括宏包和规范，如 man(7)，groff(7) ）</li><li>8：系统管理命令(通常只针对 root 用户)</li><li>9：Linux内核API （非标准）</li></ul><p>man命令的配置文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/man.config     <span class="hljs-comment">#centos6 之前man的配置文件</span><br>/etc/man_db.conf    <span class="hljs-comment">#centos7 之后man的配置文件</span><br>/etc/manpath.config <span class="hljs-comment">#ubuntu man的配置文件</span><br></code></pre></td></tr></table></figure><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">MANPATH /PATH/TO/SOMEWHERE   <span class="hljs-comment">#指明man文件搜索位置</span><br></code></pre></td></tr></table></figure><p>也可以指定位置下搜索COMMAND命令的手册页并显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">man -M /PATH/TP/SOMEWHERE COMMAND<br></code></pre></td></tr></table></figure><p>查看man手册页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">man &#123;章节&#125; keyword<br></code></pre></td></tr></table></figure><p>man帮助段落说明</p><ul><li>NAME 名称及简要说明</li><li>SYNOPSIS 用法格式说明</li><li>[] 可选内容</li><li>&lt;&gt; 必选内容</li><li>a | b 二选一</li><li>{} 分组</li><li>… 同一内容可出现多次</li><li>DESCRIPTION 描述（详细说明）</li><li>OPTIONS 选项说明</li><li>EXAMPLES 示例</li><li>FILES  相关文件</li><li>AUTHOR 作者</li><li>COPYRIGHT 版本信息</li><li>REPORTING BUGS bug 信息</li><li>SEE ALSO  其它帮助参考</li></ul><p>列出所有帮助</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">man -a keyword<br></code></pre></td></tr></table></figure><p>搜索man手册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">man -k keyword <span class="hljs-comment">#列出所有匹配的页面，使用whatis 数据库</span><br></code></pre></td></tr></table></figure><p>相当于whatis</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">man -f keyword<br></code></pre></td></tr></table></figure><p>打印man帮助文件的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">man -w [章节] keyword <br><br>范例：<br>[04:11:11 root@centos8 motd.d]<span class="hljs-comment">#man -w 1 date                                              /usr/share/man/man1/date.1.gz   </span><br></code></pre></td></tr></table></figure><h3 id="1-4-设置登入前后显示信息"><a href="#1-4-设置登入前后显示信息" class="headerlink" title="1.4 设置登入前后显示信息"></a>1.4 设置登入前后显示信息</h3><p>修改以下文件内容 即可更改登入前的显示内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/issue    <br>/etc/issue.d/cockpit.issue    <span class="hljs-comment">#也可在/etc/issue.d/里任意添加文件后缀为.issue的文件（文件名和内容任意）</span><br></code></pre></td></tr></table></figure><p>修改以下文件 即可更改登入后显示的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/motd <br>/etc/motd.d/cokpit      <span class="hljs-comment">#也可在/etc/motd.d/里任意添加文件和任意内容</span><br></code></pre></td></tr></table></figure><h3 id="1-5-Info"><a href="#1-5-Info" class="headerlink" title="1.5 Info"></a>1.5 Info</h3><p>man常用于命令参考，GNU工具Info适合通用文档参考；没有参数，列出所有的页面</p><p>Info页面的结构就像一个网站；每一页分为“节点”；链接节点之前*</p><p><strong>Info命令格式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">info [命令]<br></code></pre></td></tr></table></figure><p>导航info页</p><ul><li>方向键，PgUp,PgDn导航</li><li>Tab键移动到下一个链接</li><li>d 显示主题目录</li><li>Home 显示主题首部</li><li>Enter 进入选定链接</li><li>n/p/u/l进入下/前/上一层/最后一个链接</li><li>s 文字 文本搜索</li><li>q 退出info</li></ul><h3 id="1-6-Linux-安装提供的本地文档获取帮助"><a href="#1-6-Linux-安装提供的本地文档获取帮助" class="headerlink" title="1.6 Linux 安装提供的本地文档获取帮助"></a>1.6 Linux 安装提供的本地文档获取帮助</h3><p>Application-&gt;documentation-&gt;help (centos7)</p><p>System-&gt;help (centos6)</p><h3 id="1-7-命令自身提供的官方使用指南"><a href="#1-7-命令自身提供的官方使用指南" class="headerlink" title="1.7 命令自身提供的官方使用指南"></a>1.7 命令自身提供的官方使用指南</h3><p>/usr/share/doc 目录</p><p>多数安装了的软件包的子目录，包括了这些软件的相关原理说明</p><p>常见文档: README INSTALL CHANGES</p><p>不适合其他地方的文档的位置</p><p>配置文件范例</p><p>HTML/PDF/PS 格式的文档</p><p>授权书详情</p><h3 id="1-8-系统及第三方应用官方文档"><a href="#1-8-系统及第三方应用官方文档" class="headerlink" title="1.8 系统及第三方应用官方文档"></a>1.8 系统及第三方应用官方文档</h3><h4 id="1-8-1-通过在线文档获取帮助"><a href="#1-8-1-通过在线文档获取帮助" class="headerlink" title="1.8.1 通过在线文档获取帮助"></a>1.8.1 通过在线文档获取帮助</h4><p><a href="http://httpd.apache.org/">http://httpd.apache.org</a></p><p><a href="http://www.nginx.org/">http://www.nginx.org</a></p><p><a href="https://mariadb.com/kb/en">https://mariadb.com/kb/en</a></p><p><a href="https://dev.mysql.com/docl">https://dev.mysql.com/docl</a></p><p><a href="http://tomcat.apache.orgl/">http://tomcat.apache.orgl</a></p><p><a href="http://www.python.org/">http://www.python.org</a></p><p><a href="http://php.net/">http://php.net</a></p><h4 id="1-8-2-红帽知识库和官方在线文档"><a href="#1-8-2-红帽知识库和官方在线文档" class="headerlink" title="1.8.2 红帽知识库和官方在线文档"></a>1.8.2 红帽知识库和官方在线文档</h4><p>通过发行版官方的文档光盘或网站可以获得安装指南、部署指南、虚拟化指南等</p><p><a href="http://kbase.redhat.com/">http://kbase.redhat.com</a></p><p><a href="http://www.redhat.com/docs">http://www.redhat.com/docs</a></p><p><a href="http://laccess.redhat.com/">http://laccess.redhat.com</a></p><p><a href="https://help.ubuntu.com/lts/serverguide/index.html">https://help.ubuntu.com/lts/serverguide/index.html</a></p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux基础</title>
    <link href="/yindong.github.io/2022/07/10/Linux%E5%9F%BA%E7%A1%80/"/>
    <url>/yindong.github.io/2022/07/10/Linux%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Linux基础"><a href="#1-Linux基础" class="headerlink" title="1. Linux基础"></a>1. Linux基础</h1><h2 id="1-1-用户类型"><a href="#1-1-用户类型" class="headerlink" title="1.1 用户类型"></a>1.1 用户类型</h2><ul><li><strong>root用户#</strong>: 一个特殊的管理账户；也被称为超级用户；root已接近完整的系统控制；对系统损害几乎有无线的能力；除非必要,不要登入root。</li><li><strong>普通(非特权)用户$</strong>: 权限有限；造成损害的能力比较有限</li></ul><p>返回值为0才是管理员账户</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[10:46:14 root@centos8 ~]<span class="hljs-comment">#id -u</span><br>0<br>[10:46:20 root@centos8 ~]<span class="hljs-comment">#id -u yh</span><br>1000<br></code></pre></td></tr></table></figure><h2 id="1-2-终端"><a href="#1-2-终端" class="headerlink" title="1.2 终端"></a>1.2 终端</h2><h3 id="1-2-1-查看当前终端设备-tty"><a href="#1-2-1-查看当前终端设备-tty" class="headerlink" title="1.2.1 查看当前终端设备:tty"></a>1.2.1 查看当前终端设备:tty</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[05:04:24 root@centos8 ~]<span class="hljs-comment">#tty</span><br>/dev/pts/0<br></code></pre></td></tr></table></figure><h3 id="1-2-2-查看内存：free-h"><a href="#1-2-2-查看内存：free-h" class="headerlink" title="1.2.2 查看内存：free -h"></a>1.2.2 查看内存：free -h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:05:53 root@centos8 ~]<span class="hljs-comment">#free</span><br>              total        used        free      shared  buff/cache   available<br>Mem:        3799012     1027400     1865516       13792      906096     2513128<br>Swap:       2097148           0     2097148<br>[11:19:19 root@centos8 ~]<span class="hljs-comment">#free -h</span><br>              total        used        free      shared  buff/cache   available<br>Mem:          3.6Gi       1.0Gi       1.8Gi        13Mi       884Mi       2.4Gi<br>Swap:         2.0Gi          0B       2.0Gi<br>[11:27:18 root@centos8 ~]<span class="hljs-comment">#init 3    #临时关闭图形界面 切换的字符界面 内存使用减少</span><br>[11:27:23 root@centos8 ~]<span class="hljs-comment">#free -h</span><br>              total        used        free      shared  buff/cache   available<br>Mem:          3.6Gi       338Mi       2.4Gi       9.0Mi       878Mi       3.1Gi<br>Swap:         2.0Gi          0B       2.0Gi<br></code></pre></td></tr></table></figure><h3 id="1-2-3-查看分区：lsblk"><a href="#1-2-3-查看分区：lsblk" class="headerlink" title="1.2.3 查看分区：lsblk"></a>1.2.3 查看分区：lsblk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:19:24 root@centos8 ~]<span class="hljs-comment">#lsblk</span><br>NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sda      8:0    0  200G  0 disk <br>├─sda1   8:1    0    1G  0 part /boot<br>├─sda2   8:2    0  100G  0 part /<br>├─sda3   8:3    0   50G  0 part /data<br>├─sda4   8:4    0    1K  0 part <br>└─sda5   8:5    0    2G  0 part [SWAP]<br>sr0     11:0    1 53.5M  0 rom  /run/media/root/VMware Tools<br>sr1     11:1    1  9.3G  0 rom  /run/media/root/CentOS-8-4-2105-x86_64-dvd<br></code></pre></td></tr></table></figure><h3 id="1-2-4-查看处理器：lscpu"><a href="#1-2-4-查看处理器：lscpu" class="headerlink" title="1.2.4 查看处理器：lscpu"></a>1.2.4 查看处理器：lscpu</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:20:29 root@centos8 ~]<span class="hljs-comment">#lscpu</span><br>架构：           x86_64<br>CPU 运行模式：   32-bit, 64-bit<br>字节序：         Little Endian<br>CPU:             4<br>在线 CPU 列表：  0-3<br>每个核的线程数： 1<br>每个座的核数：   1<br>座：             4<br>NUMA 节点：      1<br>厂商 ID：        GenuineIntel<br>BIOS Vendor ID:  GenuineIntel<br>CPU 系列：       6<br>型号：           158<br>型号名称：       Intel(R) Core(TM) i5-8300H CPU @ 2.30GHz<br>BIOS Model name: Intel(R) Core(TM) i5-8300H CPU @ 2.30GHz<br>步进：           10<br>CPU MHz：        2304.000<br>BogoMIPS：       4608.00<br>超管理器厂商：   VMware<br>虚拟化类型：     完全<br>L1d 缓存：       32K<br>L1i 缓存：       32K<br>L2 缓存：        256K<br>L3 缓存：        8192K<br>NUMA 节点0 CPU： 0-3<br></code></pre></td></tr></table></figure><h3 id="1-2-5-查看系统版本：-cat-etc-os-release"><a href="#1-2-5-查看系统版本：-cat-etc-os-release" class="headerlink" title="1.2.5 查看系统版本： cat /etc/os-release"></a>1.2.5 查看系统版本： cat /etc/os-release</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:27:25 root@centos8 ~]<span class="hljs-comment">#cat /etc/os-release      注释:cat /etc/redhat-release “CentOS通用”</span><br>NAME=<span class="hljs-string">&quot;CentOS Linux&quot;</span><br>VERSION=<span class="hljs-string">&quot;8&quot;</span><br>ID=<span class="hljs-string">&quot;centos&quot;</span><br>ID_LIKE=<span class="hljs-string">&quot;rhel fedora&quot;</span><br>VERSION_ID=<span class="hljs-string">&quot;8&quot;</span><br>PLATFORM_ID=<span class="hljs-string">&quot;platform:el8&quot;</span><br>PRETTY_NAME=<span class="hljs-string">&quot;CentOS Linux 8&quot;</span><br>ANSI_COLOR=<span class="hljs-string">&quot;0;31&quot;</span><br>CPE_NAME=<span class="hljs-string">&quot;cpe:/o:centos:centos:8&quot;</span><br>HOME_URL=<span class="hljs-string">&quot;https://centos.org/&quot;</span><br>BUG_REPORT_URL=<span class="hljs-string">&quot;https://bugs.centos.org/&quot;</span><br>CENTOS_MANTISBT_PROJECT=<span class="hljs-string">&quot;CentOS-8&quot;</span><br>CENTOS_MANTISBT_PROJECT_VERSION=<span class="hljs-string">&quot;8&quot;</span><br></code></pre></td></tr></table></figure><h3 id="1-2-6-查看系统版本：-cat-etc-os-release"><a href="#1-2-6-查看系统版本：-cat-etc-os-release" class="headerlink" title="1.2.6 查看系统版本： cat /etc/os-release"></a>1.2.6 查看系统版本： cat /etc/os-release</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:27:25 root@centos8 ~]<span class="hljs-comment">#cat /etc/os-release      注释:cat /etc/redhat-release “CentOS通用”</span><br>NAME=<span class="hljs-string">&quot;CentOS Linux&quot;</span><br>VERSION=<span class="hljs-string">&quot;8&quot;</span><br>ID=<span class="hljs-string">&quot;centos&quot;</span><br>ID_LIKE=<span class="hljs-string">&quot;rhel fedora&quot;</span><br>VERSION_ID=<span class="hljs-string">&quot;8&quot;</span><br>PLATFORM_ID=<span class="hljs-string">&quot;platform:el8&quot;</span><br>PRETTY_NAME=<span class="hljs-string">&quot;CentOS Linux 8&quot;</span><br>ANSI_COLOR=<span class="hljs-string">&quot;0;31&quot;</span><br>CPE_NAME=<span class="hljs-string">&quot;cpe:/o:centos:centos:8&quot;</span><br>HOME_URL=<span class="hljs-string">&quot;https://centos.org/&quot;</span><br>BUG_REPORT_URL=<span class="hljs-string">&quot;https://bugs.centos.org/&quot;</span><br>CENTOS_MANTISBT_PROJECT=<span class="hljs-string">&quot;CentOS-8&quot;</span><br>CENTOS_MANTISBT_PROJECT_VERSION=<span class="hljs-string">&quot;8&quot;</span><br></code></pre></td></tr></table></figure><h2 id="1-3-设置主机名-hostnamectl"><a href="#1-3-设置主机名-hostnamectl" class="headerlink" title="1.3 设置主机名 hostnamectl"></a>1.3 设置主机名 hostnamectl</h2><p>hostnamectl命令来自于英文词组“hostname control”的缩写，其功能是用于显示与设置主机名称。基于/etc/hostname文件修改主机名称需要重启服务器后才可生效，而hostnamectl命令设置过的主机名称可以立即生效，效率更高。</p><p><strong>语法格式:</strong> hostnamectl [参数]</p><p><strong>常用参数:</strong></p><table><thead><tr><th>-H</th><th>操作远程主机</th></tr></thead><tbody><tr><td>status</td><td>显示当前主机名设置</td></tr><tr><td>set-hostname</td><td>设置系统主机名</td></tr></tbody></table><p>🌰  参考实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:29:22 root@centos8 ~]<span class="hljs-comment">#hostnamectl set-hostname test</span><br>[11:29:22 root@centos8 ~]<span class="hljs-comment">#exit</span><br><span class="hljs-comment">#重新ssh 发现主机名以变化为test</span><br>[11:30:02 root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#</span><br>[11:49:40 root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#hostname            #查看主机名</span><br><span class="hljs-built_in">test</span><br>[11:51:31 root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#hostname test2       #修改主机名为test2    注意:主机名不要使用下划线</span><br>[11:52:05 root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#hostname</span><br>test2<br>[11:29:22 root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#exit</span><br><span class="hljs-comment">#重新ssh 发现主机名以变化为test2, 查看主机名设备 test为静态主机名, test2为瞬息主机名</span><br>[11:35:44 root@test2 ~]<span class="hljs-comment">#hostnamectl status</span><br>   Static hostname: <span class="hljs-built_in">test</span><br>Transient hostname: test2<br>         Icon name: computer-vm<br>           Chassis: vm<br>        Machine ID: 20211228224205430949869876103821<br>           Boot ID: 5a08e2d75ba543baa3fda009f1c22113<br>    Virtualization: kvm<br>  Operating System: CentOS Linux 8<br>       CPE OS Name: cpe:/o:centos:centos:8<br>            Kernel: Linux 4.18.0-348.2.1.el8_5.x86_64<br>      Architecture: x86-64<br><span class="hljs-comment">#重启设备后 主机名恢复为静态主机名test</span><br></code></pre></td></tr></table></figure><h2 id="1-4-命令提示符"><a href="#1-4-命令提示符" class="headerlink" title="1.4 命令提示符"></a>1.4 命令提示符</h2><p><strong>命令提示符：prompt</strong></p><p><strong>显示提示符格式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:54:30 root@centos8 ~]<span class="hljs-comment">#echo $PS1</span><br>\[\e[1;32m\][\[\e[0m\]\T \[\e[1;33m\]\u\[\e[36m\]@\h\[\e[1;31m\] \W\[\e[1;32m\]]\[\e[0m\]\$<br></code></pre></td></tr></table></figure><p><strong>修改提示符格式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:54:35 root@centos8 ~]<span class="hljs-comment">#PS1=“\[\e[1;32m\][\[\e[0m\]\T \[\e[1;33m\]\u\[\e[36m\]@\h\[\e[1;31m\] \W\[\e[1;32m\]]\[\e[0m\]\$”                                 #写入内存注销后失效</span><br>[12:11:28 root@centos8 ~]<span class="hljs-comment">#echo &#x27;PS1=&quot;\[\e[1;32m\][\[\e[0m\]\T \[\e[1;33m\]\u\[\e[36m\]@\h\[\e[1;31m\] \W\[\e[1;32m\]]\[\e[0m\]\\$&quot;&#x27; &gt;  /etc/profile.d/***.sh      #写入文件永久保存</span><br></code></pre></td></tr></table></figure><p>提示符格式说明:</p><ul><li>\e  控制符\033</li><li>\u  当前用户</li><li>\h  主机名简称</li><li>\H  主机名</li><li>\w  当前工作目录</li><li>\W  当前工作目录基名</li><li>\t   24小时时间格式</li><li>\T  12小时时间格式</li><li>！命令历史数</li><li>#开机后命令历史数</li></ul><h2 id="1-5-执行命令"><a href="#1-5-执行命令" class="headerlink" title="1.5 执行命令"></a>1.5 执行命令</h2><h3 id="1-5-执行命令过程"><a href="#1-5-执行命令过程" class="headerlink" title="1.5. 执行命令过程"></a>1.5. 执行命令过程</h3><p>输入命令后回车，提请shell程序找到键入命令所对应的可执行程序或代码，并由其分析后提交给内核分配资源将其运行起来。</p><h3 id="1-5-2-shell中可执行的两类命令"><a href="#1-5-2-shell中可执行的两类命令" class="headerlink" title="1.5.2 shell中可执行的两类命令"></a>1.5.2 shell中可执行的两类命令</h3><ul><li>内部命令: 由shell自带的，而且通过某命令形式提供</li><li>外部命令: 在文件系统路径下有对应的可执行程序文件</li></ul><p><strong>区别指定的命令是内部或外部命令</strong></p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">type</span> <span class="hljs-type">COMMAND</span><br></code></pre></td></tr></table></figure><p>范例:查看是否存在对应内部和外部命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[01:13:52 root@centos8 ~]<span class="hljs-comment">#type echo</span><br><span class="hljs-built_in">echo</span> 是 shell 内建<br>[01:14:33 root@centos8 ~]<span class="hljs-comment">#which echo              </span><br>/usr/bin/echo<br>[01:15:38 root@centos8 ~]<span class="hljs-comment">#type -a echo</span><br><span class="hljs-built_in">echo</span> 是 shell 内建<br><span class="hljs-built_in">echo</span> 是 /usr/bin/echo<br></code></pre></td></tr></table></figure><h4 id="1-5-2-1-内部命令相关"><a href="#1-5-2-1-内部命令相关" class="headerlink" title="1.5.2.1 内部命令相关"></a>1.5.2.1 内部命令相关</h4><p>help 内部命令列表</p><p>enable 管理内部命令</p><ul><li>enable cmd 启用内部命令</li><li>enable -n cmd 禁用内部命令</li><li>enable -n 查看所有禁用的内部命令</li></ul><h4 id="1-5-2-2-执行外部命令"><a href="#1-5-2-2-执行外部命令" class="headerlink" title="1.5.2.2 执行外部命令"></a>1.5.2.2 执行外部命令</h4><p>查看外部命令路径:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">where</span> COMMAND<br>[01:36:28 root@centos8 ~]<span class="hljs-comment">#whereis ip</span><br>ip: /usr/sbin/ip /usr/share/man/man7/ip.7.gz /usr/share/man/man8/ip.8.gz<br>[01:36:32 root@centos8 ~]<span class="hljs-comment">#whereis echo</span><br><span class="hljs-built_in">echo</span>: /usr/bin/echo /usr/share/man/man1/echo.1.gz /usr/share/man/man1p/echo.1p.gz<br></code></pre></td></tr></table></figure><p><strong>Hash缓存表</strong></p><p>系统初始化hash表为空，当外部命令执行时，默认会从PATH路径下寻找该命令，找到后会将这条命令的路径记录到hash表中，当再次使用到该命令时，shell解释器首先会查看hash表，存在将执行之，如果不存在，将会去PATH路径下寻找，利用hash缓存表可大大提高命令的调用速率。</p><p>hash 命令常见用法</p><ul><li>hash          显示hash缓存</li><li>hash -l       显示hash缓存，可作为输入使用</li><li>hash -p path name   将命令全路径path起别名为name</li><li>hash -t name       打印缓存中name的路径</li><li>hash -d name      清楚name缓存</li><li>hash -r                  清楚缓存</li></ul><h3 id="1-5-3-命令别名"><a href="#1-5-3-命令别名" class="headerlink" title="1.5.3 命令别名"></a>1.5.3 命令别名</h3><p>对于经常执行的较长的命令,可以将其定义成较短的别名,以方便执行</p><p>显示当前shell进程所有可用的命令别名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">[01:37:05 root@centos8 ~]<span class="hljs-comment">#alias</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">cp</span>=<span class="hljs-string">&#x27;cp -i&#x27;</span><br><span class="hljs-built_in">alias</span> egrep=<span class="hljs-string">&#x27;egrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> fgrep=<span class="hljs-string">&#x27;fgrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> grep=<span class="hljs-string">&#x27;grep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> l.=<span class="hljs-string">&#x27;ls -d .* --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> ll=<span class="hljs-string">&#x27;ls -l --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">ls</span>=<span class="hljs-string">&#x27;ls --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">mv</span>=<span class="hljs-string">&#x27;mv -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">rm</span>=<span class="hljs-string">&#x27;rm -i&#x27;</span><br><span class="hljs-built_in">alias</span> <span class="hljs-built_in">which</span>=<span class="hljs-string">&#x27;(alias; declare -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot&#x27;</span><br><span class="hljs-built_in">alias</span> xzegrep=<span class="hljs-string">&#x27;xzegrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> xzfgrep=<span class="hljs-string">&#x27;xzfgrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> xzgrep=<span class="hljs-string">&#x27;xzgrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> zegrep=<span class="hljs-string">&#x27;zegrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> zfgrep=<span class="hljs-string">&#x27;zfgrep --color=auto&#x27;</span><br><span class="hljs-built_in">alias</span> zgrep=<span class="hljs-string">&#x27;zgrep --color=auto&#x27;</span><br></code></pre></td></tr></table></figure><p>定义别名NAME,其相当于执行命令VALUE</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> NAME=<span class="hljs-string">&#x27;VALUE&#x27;</span><br><span class="hljs-built_in">alias</span> free=<span class="hljs-string">&#x27;free -h&#x27;</span><br>[10:20:11 root@centos8 ~]<span class="hljs-comment">#alias free</span><br><span class="hljs-built_in">alias</span> free=<span class="hljs-string">&#x27;free -h&#x27;</span><br></code></pre></td></tr></table></figure><p> 撤销别名: unalias</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">unalias</span> [-a] name [name...]<br><span class="hljs-built_in">unalias</span> -a <span class="hljs-comment">#取消所有别名</span><br></code></pre></td></tr></table></figure><p>如果别名同原命令同名,如果要执行原命令,可使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">\ALIASNAME<br><span class="hljs-string">&quot;ALIASNAME&quot;</span><br><span class="hljs-string">&#x27;ALIASNAME&#x27;</span><br><span class="hljs-built_in">command</span> ALIASNAME<br>/path/command<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:00:36 root@centos8 ~]<span class="hljs-comment">#free</span><br>              total        used        free      shared  buff/cache   available<br>Mem:          3.6Gi       406Mi       2.4Gi       9.0Mi       846Mi       3.0Gi<br>Swap:         2.0Gi          0B       2.0Gi<br>[10:02:29 root@centos8 ~]<span class="hljs-comment">#\free</span><br>              total        used        free      shared  buff/cache   available<br>Mem:        3799020      416456     2515984        9572      866580     3141772<br>Swap:       2097148           0     2097148<br></code></pre></td></tr></table></figure><p>注意:在命令行中定义的别名,仅对当前shell进程有效</p><p>如果想永久有效,要定义到配置文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[09:57:23 root@centos8 ~]<span class="hljs-comment">#echo &quot;alias free=&#x27;free -h&#x27;&quot; &gt;&gt; .bashrc</span><br></code></pre></td></tr></table></figure><ul><li>仅对当前用户: ~/.bashr</li><li>对所有用户有效: /etc/bashrc</li></ul><p>编辑配置给出的新配置不会立即生效,bash进程重新读取配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /path/to/config_file<br>. /path/to/config_file<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:24:43 root@centos8 ~]<span class="hljs-comment">#echo &#x27;alias osversion=&quot;cat /etc/os-release&quot;&#x27; &gt;&gt; .bashrc</span><br>[10:28:50 root@centos8 ~]<span class="hljs-comment">#osversion</span><br>bash: osversion: 未找到命令...<br>[10:29:36 root@centos8 ~]<span class="hljs-comment">#. .bashrc</span><br>[10:30:02 root@centos8 ~]<span class="hljs-comment">#osversion</span><br>NAME=<span class="hljs-string">&quot;CentOS Linux&quot;</span><br>VERSION=<span class="hljs-string">&quot;8&quot;</span><br>ID=<span class="hljs-string">&quot;centos&quot;</span><br>ID_LIKE=<span class="hljs-string">&quot;rhel fedora&quot;</span><br>VERSION_ID=<span class="hljs-string">&quot;8&quot;</span><br>PLATFORM_ID=<span class="hljs-string">&quot;platform:el8&quot;</span><br>PRETTY_NAME=<span class="hljs-string">&quot;CentOS Linux 8&quot;</span><br>ANSI_COLOR=<span class="hljs-string">&quot;0;31&quot;</span><br>CPE_NAME=<span class="hljs-string">&quot;cpe:/o:centos:centos:8&quot;</span><br>HOME_URL=<span class="hljs-string">&quot;https://centos.org/&quot;</span><br>BUG_REPORT_URL=<span class="hljs-string">&quot;https://bugs.centos.org/&quot;</span><br>CENTOS_MANTISBT_PROJECT=<span class="hljs-string">&quot;CentOS-8&quot;</span><br>CENTOS_MANTISBT_PROJECT_VERSION=<span class="hljs-string">&quot;8&quot;</span><br></code></pre></td></tr></table></figure><h3 id="1-5-4-命令格式"><a href="#1-5-4-命令格式" class="headerlink" title="1.5.4 命令格式"></a>1.5.4 命令格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">COMMAND [OPTIONS...] [ARGUMENTS...]<br></code></pre></td></tr></table></figure><p>选项: 用于启用或关闭命令的某个或某些功能</p><ul><li>短选项: UNIX 风格选项, -c 例如: -l, -h</li><li>长选项: GUN  风格选项, –word 例如: –all, –human</li><li>BSD风格选项: 一个字母， 例如: a</li></ul><p>参数: 命令的作用对象,比如文件名，用户名等</p><p>注意:</p><ul><li>多个选项以及参数和命令之间使用空白字符分隔</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:09:27 root@centos8 ~]<span class="hljs-comment">#ls</span><br>公共  模板  视频  图片  文档  下载  音乐  桌面  anaconda-ks.cfg  initial-setup-ks.cfg<br>[11:09:38 root@centos8 ~]<span class="hljs-comment">#rm -rf 桌面</span><br>[11:09:44 root@centos8 ~]<span class="hljs-comment">#ls</span><br>公共  模板  视频  图片  文档  下载  音乐  anaconda-ks.cfg  initial-setup-ks.cfg<br></code></pre></td></tr></table></figure><ul><li>取消和结束命令执行: Ctrl+c, Ctrl+d</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[10:55:04 root@centos8 ~]<span class="hljs-comment">#bc</span><br>bc 1.07.1<br>Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.<br>This is free software with ABSOLUTELY NO WARRANTY.<br>For details <span class="hljs-built_in">type</span> `warranty<span class="hljs-string">&#x27;. </span><br><span class="hljs-string">2^3</span><br><span class="hljs-string">8</span><br><span class="hljs-string">obase=2                                     #用2进制输出</span><br><span class="hljs-string">255</span><br><span class="hljs-string">11111111</span><br><span class="hljs-string">256</span><br><span class="hljs-string">100000000                                  #可用Ctrl+c;Ctrl+d 退出</span><br><span class="hljs-string">[10:58:18 root@centos8 ~]#  </span><br></code></pre></td></tr></table></figure><ul><li>多个命令可以用;符合分开</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:03:26 root@centos8 ~]<span class="hljs-comment">#hostname;hostname -I;uname -r;echo $SHELL</span><br>centos8<br>192.168.72.130 192.168.122.1 <br>4.18.0-305.3.1.el8.x86_64<br>/bin/bash<br></code></pre></td></tr></table></figure><ul><li>一个命令可以用\分成多行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[11:11:46 root@centos8 ~]<span class="hljs-comment">#ho\</span><br>&gt; st\<br>&gt; name<br>centos8            <br></code></pre></td></tr></table></figure><h3 id="1-6-常见命令"><a href="#1-6-常见命令" class="headerlink" title="1.6 常见命令"></a>1.6 常见命令</h3><h4 id="1-6-1-日期和时间"><a href="#1-6-1-日期和时间" class="headerlink" title="1.6.1 日期和时间"></a>1.6.1 日期和时间</h4><p>Linux的两种时钟</p><p>   系统时钟: 由Linux内核通过CPU的工作频率进行的</p><p>   硬件时钟: 主板</p><p>相关命令</p><ul><li><p>date 显示和设置系统时间</p><p>  范例：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">date</span> +%s<br><span class="hljs-built_in">date</span> -d @1509536033<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[08:51:00 root@centos8 etc]<span class="hljs-comment">#date</span><br>2021年 11月 20日 星期六 20:51:16 CST<br>[08:51:16 root@centos8 etc]<span class="hljs-comment">#date +%F-%T</span><br>2021-11-20-20:51:26<br>[08:51:41 root@centos8 etc]<span class="hljs-comment">#date -d &#x27;-1 day&#x27; +%F-%T   #显示一天前的时间</span><br>2021-11-19-20:51:46<br><span class="hljs-comment">#创建一个以昨天时间为名称的文件</span><br>[08:55:47 root@centos8 data]<span class="hljs-comment">#touch `date -d &quot;-1 day&quot; +%F-%T`.log</span><br>[08:56:01 root@centos8 data]<span class="hljs-comment">#ls</span><br>2021-11-19-20:56:01.<span class="hljs-built_in">log</span><br><br></code></pre></td></tr></table></figure><ul><li><p>clock，hwclock: 显示硬件时钟</p><p>  -s, –hctosys 以硬件时钟为准，校正系统时钟</p><p>  -w,–systohc 以系统时钟为准, 校正硬件时钟</p></li></ul><p>时区:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/localtime<br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[09:50:56 root@centos8 ~]<span class="hljs-comment">#ll /etc/localtime</span><br>lrwxrwxrwx. 1 root root 35 8月  23 13:47 /etc/localtime -&gt; ../usr/share/zoneinfo/Asia/Shanghai<br></code></pre></td></tr></table></figure><p>显示日历:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cal -y<br></code></pre></td></tr></table></figure><p>范例:</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tap">[09:51:17 root@centos8 ~]<span class="hljs-comment">#cal 9 1752</span><br>      九月<span class="hljs-number"> 1752 </span>  <br>日 一 二 三 四 五 六<br>      <span class="hljs-number"> 1 </span><span class="hljs-number"> 2 </span>14<span class="hljs-number"> 15 </span>16<br>17<span class="hljs-number"> 18 </span>19<span class="hljs-number"> 20 </span>21<span class="hljs-number"> 22 </span>23<br>24<span class="hljs-number"> 25 </span>26<span class="hljs-number"> 27 </span>28<span class="hljs-number"> 29 </span>30<br>                  <br></code></pre></td></tr></table></figure><h4 id="1-6-2-关机和重启"><a href="#1-6-2-关机和重启" class="headerlink" title="1.6.2 关机和重启"></a>1.6.2 关机和重启</h4><p>关机:</p><ul><li>halt</li><li>poweroff</li></ul><p>重启:</p><ul><li>reboot</li></ul><p>-f, 强制，不调用shutdown</p><p>-p, 切断电源</p><p>关机或重启: shutdown</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">shutdown [OPTION]... [TIME] [MESSAGE]<br></code></pre></td></tr></table></figure><p>-r: reboot</p><p>-h: halt</p><p>-c: cancel</p><p>TIME: 无指定，默认相当于+1 （CentOS7）</p><p> now：立刻，相当于+0</p><div class="code-wrapper"><pre><code class="hljs">+#：相对时间表示法，几分钟之后；例如+3</code></pre></div><p>hh:mm：绝对时间表示，指定具体时间</p><h4 id="1-6-3-用户登入信息查看命令"><a href="#1-6-3-用户登入信息查看命令" class="headerlink" title="1.6.3 用户登入信息查看命令"></a>1.6.3 用户登入信息查看命令</h4><ul><li>whoami：显示当前登入有效用户</li><li>who：系统当前所有的登入会话</li><li>w：系统当前所有的登入会话及所做的操作</li></ul><h4 id="1-6-4-文本编辑"><a href="#1-6-4-文本编辑" class="headerlink" title="1.6.4 文本编辑"></a>1.6.4 文本编辑</h4><p>nano；vim</p><h4 id="1-6-5-会话管理"><a href="#1-6-5-会话管理" class="headerlink" title="1.6.5 会话管理"></a>1.6.5 会话管理</h4><h5 id="1-6-5-1-screen"><a href="#1-6-5-1-screen" class="headerlink" title="1.6.5.1 screen"></a>1.6.5.1 screen</h5><p>screen命令:</p><ul><li><p>创建screen会话</p><p>  screen -S [SESSION]</p></li><li><p>加入screen会话</p><p>  screen -x [SESSION]</p></li><li><p>退出并关闭screen会话</p><p>  screen+a,d</p></li><li><p>显示所有已经打开的screen会话</p><p>  screen -ls</p></li><li><p>恢复某screen会话</p><p>  screen -r [SESSION]</p></li></ul><h5 id="1-6-5-2-tmux"><a href="#1-6-5-2-tmux" class="headerlink" title="1.6.5.2 tmux"></a>1.6.5.2 tmux</h5><h6 id="1-6-5-2-1-会话与进程"><a href="#1-6-5-2-1-会话与进程" class="headerlink" title="1.6.5.2.1 会话与进程"></a>1.6.5.2.1 会话与进程</h6><p>命令行的典型使用方式是，打开一个终端窗口（terminal window，以下简称”窗口”），在里面输入命令。用户与计算机的这种临时的交互，称为一次”会话”（session） 。</p><p>会话的一个重要特点是，窗口与其中启动的进程是连在一起的。打开窗口，会话开始；关闭窗口，会话结束，会话内部的进程也会随之终止，不管有没有运行完。</p><p>一个典型的例子就是，SSH 登录远程计算机，打开一个远程窗口执行命令。这时，网络突然断线，再次登录的时候，是找不回上一次执行的命令的。因为上一次 SSH 会话已经终止了，里面的进程也随之消失了。</p><p>为了解决这个问题，会话与窗口可以”解绑”：窗口关闭时，会话并不终止，而是继续运行，等到以后需要的时候，再让会话”绑定”其他窗口。</p><h6 id="1-6-5-2-2-tmux的作用"><a href="#1-6-5-2-2-tmux的作用" class="headerlink" title="1.6.5.2.2 tmux的作用"></a>1.6.5.2.2 tmux的作用</h6><p>Tmux 就是会话与窗口的”解绑”工具，将它们彻底分离。</p><ul><li>它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。</li><li>它可以让新窗口”接入”已经存在的会话。</li><li>它允许每个会话有多个连接窗口，因此可以多人实时共享会话。</li><li>它还支持窗口任意的垂直和水平拆分。</li></ul><p>类似的终端复用器还有 GNU Screen。Tmux 与它功能相似，但是更易用，也更强大</p><h6 id="1-6-5-2-3-基本用法"><a href="#1-6-5-2-3-基本用法" class="headerlink" title="1.6.5.2.3 基本用法"></a>1.6.5.2.3 基本用法</h6><ul><li>启动与退出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[01:48:01 root@centos8 ~]<span class="hljs-comment">#tmux</span><br>[01:48:01 root@centos8 ~]<span class="hljs-comment">#exit    #或按下ctrl+d</span><br></code></pre></td></tr></table></figure><ul><li>前缀键</li></ul><p>Tmux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是Ctrl+b，即先按下Ctrl+b，快捷键才会生效。</p><p>举例来说，帮助命令的快捷键是Ctrl+b ?。它的用法是，在 Tmux 窗口中，先按下Ctrl+b，松开后再按下 ?，就会显示帮助信息。</p><p>然后，按下 ESC 键或q键，就可以退出帮助。</p><h6 id="1-6-5-2-4-会话管理"><a href="#1-6-5-2-4-会话管理" class="headerlink" title="1.6.5.2.4 会话管理"></a>1.6.5.2.4 会话管理</h6><ul><li>新建会话</li></ul><p>第一个启动的 Tmux 窗口，编号是 <code>0</code>，第二个窗口的编号是 <code>1</code>，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。</p><p>使用编号区分会话，不太直观，更好的方法是为会话起名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[02:03:36 root@centos8 ~]<span class="hljs-comment">#tmux new -s &lt;session-name&gt;</span><br></code></pre></td></tr></table></figure><ul><li>分离会话</li></ul><p>在 Tmux 窗口中，按下 <code>Ctrl+b d</code>或者输入 <code>tmux detach</code>命令，就会将当前会话与窗口分离。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[02:10:34 root@centos8 ~]<span class="hljs-comment">#tmux detach</span><br></code></pre></td></tr></table></figure><p>上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。</p><p><code>tmux ls</code>命令可以查看当前所有的 Tmux 会话。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[02:10:34 root@centos8 ~]<span class="hljs-comment">#tmux ls</span><br>0: 1 windows (created Tue Nov 16 14:03:36 2021) [186x27]<br></code></pre></td></tr></table></figure><ul><li>接入会话</li></ul><p><code>tmux attach</code>命令用于重新接入某个已存在的会话。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用会话编号</span><br>$ tmux attach -t 0<br><span class="hljs-comment"># 使用会话名称</span><br>$ tmux attach -t &lt;session-name<br></code></pre></td></tr></table></figure><ul><li>杀死会话</li></ul><p><code>tmux kill-session</code>命令用于杀死某个会话。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用会话编号</span><br>$ tmux kill-session -t 0<br><span class="hljs-comment"># 使用会话名称</span><br>$ tmux kill-session -t &lt;session-name&gt;<br></code></pre></td></tr></table></figure><ul><li>切换会话</li></ul><p><code>tmux switch</code>命令用于切换会话。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用会话编号</span><br>$ tmux switch -t 0<br><span class="hljs-comment"># 使用会话名称</span><br>$ tmux switch -t &lt;session-name&gt;<br></code></pre></td></tr></table></figure><ul><li>重命名会话</li></ul><p><code>tmux rename-session</code>命令用于重命名会话。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ tmux rename-session -t 0 &lt;new-name&gt;<br></code></pre></td></tr></table></figure><p>上面命令将0号会话重命名。</p><ul><li>会话快捷键</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Ctrl+b d：分离当前会话。<br>Ctrl+b s：列出所有会话。<br>Ctrl+b $：重命名当前会话<br></code></pre></td></tr></table></figure><p>综上所述，以下是 Tmux 的最简操作流程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.新建会话tmux new -s my_session。<br>2.在 Tmux 窗口运行所需的程序。<br>3.按下快捷键Ctrl+b d将会话分离。<br>4.下次使用时，重新连接到会话tmux attach-session -t my_session<br></code></pre></td></tr></table></figure><h6 id="1-6-5-2-5-窗格操作"><a href="#1-6-5-2-5-窗格操作" class="headerlink" title="1.6.5.2.5 窗格操作"></a>1.6.5.2.5 窗格操作</h6><p>Tmux 可以将窗口分成多个窗格（pane），每个窗格运行不同的命令。以下命令都是在 Tmux 窗口中执行。</p><ul><li>划分窗格</li></ul><p><code>tmux split-window</code>命令用来划分窗格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 划分上下两个窗格</span><br>$ tmux split-window<br><br><span class="hljs-comment"># 划分左右两个窗格</span><br>$ tmux split-window -h<br></code></pre></td></tr></table></figure><ul><li>移动光标</li></ul><p><code>tmux select-pane</code>命令用来移动光标位置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 光标切换到上方窗格</span><br>$ tmux select-pane -U<br><span class="hljs-comment"># 光标切换到下方窗格</span><br>$ tmux select-pane -D<br><span class="hljs-comment"># 光标切换到左边窗格</span><br>$ tmux select-pane -L<br><span class="hljs-comment"># 光标切换到右边窗格</span><br>$ tmux select-pane -R<br></code></pre></td></tr></table></figure><ul><li>交换窗格位置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 当前窗格上移</span><br>$ tmux swap-pane -U<br><span class="hljs-comment"># 当前窗格下移</span><br>$ tmux swap-pane -D<br></code></pre></td></tr></table></figure><ul><li>窗格快捷键</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">Ctrl+b %：划分左右两个窗格。<br>Ctrl+b <span class="hljs-string">&quot;：划分上下两个窗格。</span><br><span class="hljs-string">Ctrl+b &lt;arrow key&gt;：光标切换到其他窗格。&lt;arrow key&gt;是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键↓。</span><br><span class="hljs-string">Ctrl+b ;：光标切换到上一个窗格。</span><br><span class="hljs-string">Ctrl+b o：光标切换到下一个窗格。</span><br><span class="hljs-string">Ctrl+b &#123;：当前窗格与上一个窗格交换位置。</span><br><span class="hljs-string">Ctrl+b &#125;：当前窗格与下一个窗格交换位置。</span><br><span class="hljs-string">Ctrl+b Ctrl+o：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。</span><br><span class="hljs-string">Ctrl+b Alt+o：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。</span><br><span class="hljs-string">Ctrl+b x：关闭当前窗格。</span><br><span class="hljs-string">Ctrl+b !：将当前窗格拆分为一个独立窗口。</span><br><span class="hljs-string">Ctrl+b z：当前窗格全屏显示，再使用一次会变回原来大小。</span><br><span class="hljs-string">Ctrl+b Ctrl+&lt;arrow key&gt;：按箭头方向调整窗格大小。</span><br><span class="hljs-string">Ctrl+b q：显示窗格编号。</span><br></code></pre></td></tr></table></figure><h6 id="1-6-5-2-6-窗口管理"><a href="#1-6-5-2-6-窗口管理" class="headerlink" title="1.6.5.2.6 窗口管理"></a>1.6.5.2.6 窗口管理</h6><p>除了将一个窗口划分成多个窗格，Tmux 也允许新建多个窗口。</p><ul><li>新建窗口</li></ul><p><code>tmux new-window</code>命令用来创建新窗口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ tmux new-window<br><span class="hljs-comment"># 新建一个指定名称的窗口</span><br>$ tmux new-window -n &lt;window-name&gt;<br></code></pre></td></tr></table></figure><ul><li>切换窗口</li></ul><p><code>tmux select-window</code>命令用来切换窗口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 切换到指定编号的窗口</span><br>$ tmux select-window -t &lt;window-number&gt;<br><span class="hljs-comment"># 切换到指定名称的窗口</span><br>$ tmux select-window -t &lt;window-name&gt;<br></code></pre></td></tr></table></figure><ul><li>重命名窗口</li></ul><p><code>tmux rename-window</code>命令用于为当前窗口起名（或重命名）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ tmux rename-window &lt;new-name&gt;<br></code></pre></td></tr></table></figure><ul><li>窗口快捷键</li></ul><p>下面是一些窗口操作的快捷键。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Ctrl+b c：创建一个新窗口，状态栏会显示多个窗口的信息。<br>Ctrl+b p：切换到上一个窗口（按照状态栏上的顺序）。<br>Ctrl+b n：切换到下一个窗口。<br>Ctrl+b &lt;number&gt;：切换到指定编号的窗口，其中的&lt;number&gt;是状态栏上的窗口编号。<br>Ctrl+b w：从列表中选择窗口。<br>Ctrl+b ,：窗口重命名<br></code></pre></td></tr></table></figure><ul><li>其它命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 列出所有快捷键，及其对应的 Tmux 命令</span><br>$ tmux list-keys<br><span class="hljs-comment"># 列出所有 Tmux 命令及其参数</span><br>$ tmux list-commands<br><span class="hljs-comment"># 列出当前所有 Tmux 会话的信息</span><br>$ tmux info<br><span class="hljs-comment"># 重新加载当前的 Tmux 配置</span><br>$ tmux source-file ~/.tmux.conf<br></code></pre></td></tr></table></figure><h4 id="1-6-6-输出信息-echo"><a href="#1-6-6-输出信息-echo" class="headerlink" title="1.6.6 输出信息 echo"></a>1.6.6 输出信息 echo</h4><p>echo命令可以将后面跟的字符进行输出</p><p>功能: 显示字符,echo会将输入的字符串送往标准输出。输出的字符串间以空白字符隔开，并在最后加上换行号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> [-neE][字符串]<br></code></pre></td></tr></table></figure><p>选项:</p><ul><li>-E (默认) 不支持\解释功能</li><li>-n 不自动换行</li><li>-e 启用\字符的解释功能</li></ul><p>显示变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bahs">echo &quot;$VAR_NAME&quot;    #变量会替换，弱引用<br>echo &#x27;$VAR_NAME&#x27;    #变量不会替换，强引用<br></code></pre></td></tr></table></figure><p>启用命令选项-e，若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文件输出</p><ul><li>\a发出警告声</li><li>\b退格键</li><li>\c最后不加上换行符号</li><li>\e escape,相当于\033</li><li>\n 换行且光标移至行首</li><li>\r 回车,即光标移至行首,但不换行</li><li>\t 插入tab</li><li>\插入\字符</li><li>\0nnn插入nnn(八进制) 所代表的ASCII字符</li><li>\xHH插入HH(十六进制) 所代表的ASCII数字 （man 7 ascii）</li></ul><p>🌰</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[01:38:11 root@centos8 ~]<span class="hljs-comment">#echo -e &#x27;\033[43;31;5myuhao\e[0m&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>echo的高级用法</strong></p><p>在终端中，ANSI定义了用于屏幕显示的Escape屏幕控制码</p><p>具有颜色的字符，其格式如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;\033[字符背景颜色;字体颜色m字符串\033[0m&quot;</span><br><br>\033[30m -- \033[37m 设置前景色 <br>\033[40m -- \033[47m 设置背景色<br></code></pre></td></tr></table></figure><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-comment">#字符背景颜色范围: 40--47 40:黑</span><br><span class="hljs-attribute">41</span>:红<br><span class="hljs-attribute">42</span>:绿<br><span class="hljs-attribute">43</span>:黄 <br><span class="hljs-attribute">44</span>:蓝 <br><span class="hljs-attribute">45</span>:紫 <br><span class="hljs-attribute">46</span>:深绿 <br><span class="hljs-attribute">47</span>:白色<br><br><span class="hljs-comment">#字体颜色: 30--37 </span><br><span class="hljs-attribute">30</span>: 黑<br><span class="hljs-attribute">31</span>: 红<br><span class="hljs-attribute">32</span>: 绿<br><span class="hljs-attribute">33</span>: 黄 <br><span class="hljs-attribute">34</span>: 蓝 <br><span class="hljs-attribute">35</span>: 紫 <br><span class="hljs-attribute">36</span>: 深绿<br><span class="hljs-attribute">37</span>: 白色<br></code></pre></td></tr></table></figure><p>加颜色只是以下控制码中的一种，下面是常见的一些ANSI控制码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">\033[0m 关闭所有属性 <br>\033[1m 设置高亮度 <br>\033[4m 下划线<br>\033[5m 闪烁<br>\033[7m 反显<br>\033[8m 消隐<br>\033[nA 光标上移n行 <br>\033[nB 光标下移n行 <br>\033[nC 光标右移n列 <br>\033[nD 光标左移n列 <br>\033[x;yH 设置光标位置x行y列 <br>\033[2J 清屏<br>\033[K 清除从光标到行尾的内容 <br>\033[s 保存光标位置<br>\033[u 恢复光标位置<br>\033[?25l 隐藏光标<br>\033[?25h 显示光标<br>\033[2J\033[0;0H 清屏且将光标置顶<br></code></pre></td></tr></table></figure><h2 id="1-7-字符集和编码"><a href="#1-7-字符集和编码" class="headerlink" title="1.7 字符集和编码"></a>1.7 字符集和编码</h2><h4 id="1-7-1-ASCII码"><a href="#1-7-1-ASCII码" class="headerlink" title="1.7.1 ASCII码"></a>1.7.1 ASCII码</h4><p>计算机内部,所有信息最终都是一个二进制值。上个世纪60年代,美国制定了一套字符编码,对英语字符与二进制位之间的关系,做了统一规定,即ASCII（American Standard Code for Information Interchange）码。ASCII码一共规定了128个字符的编码,占用了一个字节的后面7位,最前面的一位统一规定为0</p><h4 id="1-7-2-修改LANG变量实现中文语言提示"><a href="#1-7-2-修改LANG变量实现中文语言提示" class="headerlink" title="1.7.2 修改LANG变量实现中文语言提示"></a>1.7.2 修改LANG变量实现中文语言提示</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@centos7 ~]<span class="hljs-comment">#echo $LANG </span><br>en_US.UTF-8<br>[root@centos7 ~]<span class="hljs-comment">#xxx</span><br>bash: xxx: <span class="hljs-built_in">command</span> not found... <br>[root@centos7 ~]<span class="hljs-comment">#LANG=zh_CN.UTF-8 </span><br>[root@centos7 ~]<span class="hljs-comment">#echo $LANG </span><br>zh_CN.UTF-8<br>[root@centos7 ~]<span class="hljs-comment">#xxx</span><br>bash: xxx: 未找到命令...<br></code></pre></td></tr></table></figure><h2 id="1-8-命令行扩展和被括起来的集合"><a href="#1-8-命令行扩展和被括起来的集合" class="headerlink" title="1.8 命令行扩展和被括起来的集合"></a>1.8 命令行扩展和被括起来的集合</h2><h4 id="1-8-1-命令行扩展"><a href="#1-8-1-命令行扩展" class="headerlink" title="1.8.1 命令行扩展: $ ()"></a>1.8.1 命令行扩展: $ ()</h4><p>把一个命令的输出打印给另一个命令的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$(CMD) 或 `CMD`<br></code></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[04:39:17 root@centos8 ~]<span class="hljs-comment">#echo &quot;i am $(whoami)&quot;</span><br>i am root<br>[04:39:22 root@centos8 ~]<span class="hljs-comment">#echo &quot;This system&#x27;s name is $(hostname)&quot;</span><br>This system<span class="hljs-string">&#x27;s name is centos8</span><br></code></pre></td></tr></table></figure><h4 id="1-8-2-括号扩展"><a href="#1-8-2-括号扩展" class="headerlink" title="1.8.2 括号扩展: {}"></a>1.8.2 括号扩展: {}</h4><p>{}可以实现打印重复字符串的简化形式</p><p>范例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[04:52:24 root@centos8 ~]<span class="hljs-comment">#echo &#123;1..10&#125;</span><br>1 2 3 4 5 6 7 8 9 10<br>[04:54:40 root@centos8 ~]<span class="hljs-comment">#echo &#123;1..20..4&#125;</span><br>1 5 9 13 17<br>[04:52:00 root@centos8 ~]<span class="hljs-comment">#echo file&#123;1,3,5&#125;</span><br>file1 file3 file5<br></code></pre></td></tr></table></figure><h2 id="1-9-tab键补全"><a href="#1-9-tab键补全" class="headerlink" title="1.9 tab键补全"></a>1.9 tab键补全</h2><p>tab键可以实现命令及路径等不全，提供输入效率，避免出错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">最小安装tab很多命令不能自动补齐<br>dnf install bash-completion -y<br><span class="hljs-built_in">source</span> /etc/profile.d/bash_completion.sh<br></code></pre></td></tr></table></figure><h4 id="1-9-1-命令补全"><a href="#1-9-1-命令补全" class="headerlink" title="1.9.1 命令补全"></a>1.9.1 命令补全</h4><ul><li>内部命令:</li><li>外部命令:bash根据PATH环境变量定义的路径，自左而右在每个路径搜寻以给定命令名命名的文件，第一次找到的命令即为要执行的命令。</li></ul><p>注意: 用户给定的字符串只有一条唯一对应的命令直接补全，否则再次tab会给出列表</p><h4 id="1-9-2-路径补全"><a href="#1-9-2-路径补全" class="headerlink" title="1.9.2 路径补全"></a>1.9.2 路径补全</h4><p>把用户给出的字符串当做路径开头，并在其指定上级目录下搜索以指定的字符串开头的文件名，如果唯一：则直接补全否则再次tab给出列表。</p><h3 id="1-9-3-双击tab键"><a href="#1-9-3-双击tab键" class="headerlink" title="1.9.3 双击tab键"></a>1.9.3 双击tab键</h3><ul><li>command 2 tab 所有子命令或文件补全</li><li>string 2 tab 以string开头命令</li><li>/2tab 显示所有根目录下一级目录，包括隐藏目录</li><li>./2tab 当前目录下子目录，包括隐藏目录</li><li>*2tab 当前目录下子目录，不包括隐藏目录</li><li>~2tab 所有用户列表</li><li>$2tab 所有变量</li><li>@2tab /etc/hosts记录 （ecntos7不支持）</li><li>=2tab 相当于ls -A （centos7不支持）</li></ul><h2 id="1-10-命令行历史"><a href="#1-10-命令行历史" class="headerlink" title="1.10 命令行历史"></a>1.10 命令行历史</h2><p>保存你输入的命令历史。可以用它来重复执行命令，登入shell时，会读取命令历史文件中记录下的命令~/.bash_history 登入进shell后新执行的命令只会记录在缓存中；这些命令会再用户退出时“追加”到命令历史文件中。</p><ul><li>-c : 清空命令历史</li><li>-d : 删除历史记录中指定的行</li><li>n  : 显示最近的n条记录</li><li>-a : 将历史命令缓冲区中命令写入历史命令文件中</li><li>-r : 将历史命令文件中的命令读入当前历史命令缓冲区</li><li>-w: 保存历史列表到指定的历史文件</li><li>-n : 读历史文件中未读过的行到历史列表</li><li>-p : 展开历史参数成多行，但不存在历史列表中</li><li>-s : 展开历史参数成一行，附近在历史列表后</li></ul><p><strong>命令历史相关环境变量</strong></p><ul><li>HISTSIZE : 命令历史记录的条数</li><li>HISTFILE : 指定历史文件，默认为~/.bash_history</li><li>HISTTIMEFORMAT=”%F %T “ 显示时间</li><li>HISTIGNORE=”str1:str2*;…”, 忽略str1命令，str2开头的历史</li><li>HISTCONTROL : 控制命令历史的记录方式 ignoredups 是默认值，可忽略重复命令，连续且相同为”重复“ignorespace 忽略所有以空白开头的命令;ignoreboth相当于ignoredups，ignorespace的组合;erasedups删除重复命令。</li></ul><p><strong>持久保存变量</strong></p><ul><li>以上变量可以export变量名=”值”形式存放在/etc/profile 或 ~/.bash_profile</li></ul><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[09:21:01 root@centos8 ~]<span class="hljs-comment">#cat .bash_profile </span><br><span class="hljs-comment"># .bash_profile</span><br><br><span class="hljs-comment"># Get the aliases and functions</span><br><span class="hljs-keyword">if</span> [ -f ~/.bashrc ]; <span class="hljs-keyword">then</span><br>. ~/.bashrc<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># User specific environment and startup programs</span><br><br>PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HOME</span>/bin<br><br><span class="hljs-built_in">export</span> PATH<br><span class="hljs-built_in">export</span> HISTCONTROL=ignoreboth<br><span class="hljs-built_in">export</span> HISTSIZE=1500<br><span class="hljs-built_in">export</span> HISTTIMEFORMAT=<span class="hljs-string">&quot;%F %T&quot;</span><br></code></pre></td></tr></table></figure><h2 id="1-11-bash快捷键"><a href="#1-11-bash快捷键" class="headerlink" title="1.11 bash快捷键"></a>1.11 bash快捷键</h2><p>Ctrl+l清屏，相当于clear命令</p><p>Ctrl + o执行当前命令，并重新显示本命令</p><p>ctrl+ s阻止屏幕输出，锁定</p><p>Ctrl + q允许屏幕输出</p><p>ctrl + c终止命令</p><p>ctrl+z挂起命令</p><p>Ctrl+ a光标移到命令行首，相当于Home</p><p>Ctrl + e光标移到命令行尾，相当于End</p><p>Ctrl +f光标向右移动一个字符</p><p>Ctrl+ b光标向左移动一个字符</p><p>Alt+ f光标向右移动一个单词尾</p><p>Alt + b光标向左移动一个单词首</p><p>Ctrl + xx光标在命令行首和光标之间移动</p><p>Ctrl +u从光标处删除至命令行首</p><p>Ctrl+k从光标处删除至命令行尾</p><p>Alt + r删除当前整行</p><p>Ctrl+ w从光标处向左删除至单词首</p><p>Alt + d 从光标处向右删除至单词尾</p><p>ctrl + d删除光标处的一个字符</p><p>Ctrl+ h删除光标前的一个字符</p><p>Ctrl +y 将删除的字符粘贴至光标后</p><p>Alt +c从光标处开始向右更改为首字母大写的单词</p><p>Alt + u从光标处开始，将右边一个单词更改为大写</p><p>Alt+l从光标处开始，将右边一个单词更改为小写</p><p>Ctrl + t交换光标处和之前的字符位置</p><p>Alt + t交换光标处和之前的单词位置</p><p>Alt+#提示输入指定字符后，重复显示该字符#次</p><p>注意:Alt组合快捷键经常和其它软件冲突</p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>免费搞网站-gitpages</title>
    <link href="/yindong.github.io/2022/05/12/%E5%85%8D%E8%B4%B9%E6%90%9E%E7%BD%91%E7%AB%99-gitpages/"/>
    <url>/yindong.github.io/2022/05/12/%E5%85%8D%E8%B4%B9%E6%90%9E%E7%BD%91%E7%AB%99-gitpages/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>完全免费的git网站搭建, 参考 <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><p>实现的目标: 本地写markdown, 推送github即可以看 github.io 域名查看网页。</p><p>实现的工具</p><ul><li><code>nodejs</code>           hexo生成网站</li><li><code>codeup.aliyun.com</code>    保存自己的博客代码</li><li><code>github.com</code>   静态页面展示 </li><li><code>vscode</code>   开发工具</li></ul><span id="more"></span><h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p>参考  <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a> 确保访问OK</p><p>slcnx.github.io 仓库名</p><p>准备index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  hello world<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="20220512214701-16524035403072.png" alt="image-20220512214700115"></p><p><img src="20220512214623.png" alt="image-20220512214617755"></p><h1 id="docker推送github"><a href="#docker推送github" class="headerlink" title="docker推送github"></a>docker推送github</h1><p>新建临时目录，vscode打开, 准备以下文件</p><p>id_rsa_2048 <strong>需要linux生成或xshell生成，不可以自己生成</strong></p><p>id_rsa_2048的公钥加入到以上仓库中</p><p><img src="20220512225649.png" alt="image-20220512225647448"></p><p>Dockerfile</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">FROM</span> node:latest<br><br><br>WORKDIR /data/git <br><br><span class="hljs-built_in">ADD</span> id_rsa_2048 /root/.ssh/<br><span class="hljs-built_in">RUN</span>  chmod 600 /root/.ssh/id_rsa_2048 <br><br><span class="hljs-built_in">ADD</span> . ./<br><br><span class="hljs-comment"># 生成网页</span><br><span class="hljs-comment">#RUN npm run build </span><br><br><br><span class="hljs-comment"># 上传到GIT</span><br><br><span class="hljs-built_in">RUN</span> install -dv /data/page/ &amp;&amp; cp -a index.html /data/page/<br><br><br>WORKDIR /data/page/<br>ENV <span class="hljs-attribute">GIT_SSH_COMMAND</span>=<span class="hljs-string">&#x27;ssh -i /root/.ssh/id_rsa_2048  -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no&#x27;</span><br><span class="hljs-built_in">RUN</span> git<span class="hljs-built_in"> config </span>--global init.defaultBranch main &amp;&amp; git<span class="hljs-built_in"> config </span>--global user.email <span class="hljs-string">&#x27;2192383945@qq.com&#x27;</span> &amp;&amp; git<span class="hljs-built_in"> config </span>--global user.name <span class="hljs-string">&#x27;songliangcheng&#x27;</span>  &amp;&amp; \<br>    git<span class="hljs-built_in"> config </span>--global pull.rebase <span class="hljs-literal">true</span> &amp;&amp; \<br>    git init &amp;&amp; \<br>    git remote <span class="hljs-built_in">add</span> origin git@github.com:slcnx/slcnx.github.io.git &amp;&amp; git <span class="hljs-built_in">add</span> -A &amp;&amp; git commit -m init &amp;&amp; git push --force origin main <br></code></pre></td></tr></table></figure><p>index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    cat<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">D:\vscode_projects\myblog&gt;docker build -t <span class="hljs-built_in">test</span> .<br></code></pre></td></tr></table></figure><p><img src="20220512223352.png" alt="image-20220512223351323"></p><h1 id="本地生成hexo仓库"><a href="#本地生成hexo仓库" class="headerlink" title="本地生成hexo仓库"></a>本地生成hexo仓库</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br><br><span class="hljs-comment"># 当前目录为项目根</span><br>hexo init test1blog<br><span class="hljs-built_in">cd</span> test1blog<br><br><span class="hljs-comment"># 内容</span><br>$ <span class="hljs-built_in">ls</span><br>_config.landscape.yml  node_modules/  package-lock.json  <span class="hljs-built_in">source</span>/<br>_config.yml            package.json   scaffolds/         themes/<br></code></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p><img src="20220512224452.png" alt="image-20220512224451207"></p><h2 id="发布到github"><a href="#发布到github" class="headerlink" title="发布到github"></a>发布到github</h2><p>在以上目录 <code>test1blog</code> 中生成以下文件</p><ol><li><p><code>.dockerignore</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">node_modules/<br></code></pre></td></tr></table></figure></li><li><p><code>Dockerfile</code></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> node:latest<br><br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /data/git </span><br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> id_rsa_2048 /root/.ssh/</span><br><span class="hljs-keyword">RUN</span><span class="language-bash">  <span class="hljs-built_in">chmod</span> 600 /root/.ssh/id_rsa_2048 </span><br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> . ./</span><br><br><span class="hljs-comment"># 生成网页</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install &amp;&amp; npm run build </span><br><br><span class="hljs-comment"># 上传到GIT</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> install -dv /data/page/ &amp;&amp; <span class="hljs-built_in">cp</span> -a public /data/page/</span><br><br><span class="hljs-keyword">ARG</span> GITHUB<br><span class="hljs-keyword">ARG</span> GUSER <br><span class="hljs-keyword">ARG</span> EMAIL <br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /data/page/public/</span><br><span class="hljs-keyword">ENV</span> GIT_SSH_COMMAND=<span class="hljs-string">&#x27;ssh -i /root/.ssh/id_rsa_2048  -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no&#x27;</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> git config --global init.defaultBranch main &amp;&amp; git config --global user.email <span class="hljs-variable">$EMAIL</span>  &amp;&amp; git config --global user.name <span class="hljs-variable">$GUSER</span>  &amp;&amp; \</span><br><span class="language-bash">    git config --global pull.rebase <span class="hljs-literal">true</span> &amp;&amp; \</span><br><span class="language-bash">    git init &amp;&amp; \</span><br><span class="language-bash">    git remote add origin <span class="hljs-variable">$GITHUB</span> &amp;&amp; git add -A &amp;&amp; git commit -m init &amp;&amp; git push --force origin main </span><br></code></pre></td></tr></table></figure></li><li><p><code>id_rsa_2048</code> 以上与github互通的密钥</p></li><li><p>发布</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker build <span class="hljs-attr">--build-arg</span> GITHUB=git@github<span class="hljs-selector-class">.com</span>:slcnx/slcnx<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.git</span> <span class="hljs-attr">--build-arg</span> EMAIL=<span class="hljs-string">&#x27;2192383945@qq.com&#x27;</span> <span class="hljs-attr">--build-arg</span> GUSER=<span class="hljs-string">&#x27;songliangcheng&#x27;</span> ./<br></code></pre></td></tr></table></figure></li></ol><p><img src="20220512225143.png" alt="image-20220512225141348"></p><h1 id="codeup一键发布"><a href="#codeup一键发布" class="headerlink" title="codeup一键发布"></a>codeup一键发布</h1><h2 id="添加codeup仓库"><a href="#添加codeup仓库" class="headerlink" title="添加codeup仓库"></a>添加codeup仓库</h2><p>将当前仓库加入到自己的codeup中</p><p><img src="20220512230442.png" alt="image-20220512230441057"></p><p>复制https地址 <a href="https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git">https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git</a></p><h2 id="初始化代码"><a href="#初始化代码" class="headerlink" title="初始化代码"></a>初始化代码</h2><p>将上面test1blog中，初始化，添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global init.defaultBranch main<br>git init<br>git remote add origin https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git<br></code></pre></td></tr></table></figure><p>添加文件 <code>.gitignore</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Logs</span><br>logs<br>*.<span class="hljs-built_in">log</span><br>npm-debug.log*<br>yarn-debug.log*<br>yarn-error.log*<br>lerna-debug.log*<br>.pnpm-debug.log*<br><br><span class="hljs-comment"># Diagnostic reports (https://nodejs.org/api/report.html)</span><br>report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json<br><br><span class="hljs-comment"># Runtime data</span><br>pids<br>*.pid<br>*.seed<br>*.pid.lock<br><br><span class="hljs-comment"># Directory for instrumented libs generated by jscoverage/JSCover</span><br>lib-cov<br><br><span class="hljs-comment"># Coverage directory used by tools like istanbul</span><br>coverage<br>*.lcov<br><br><span class="hljs-comment"># nyc test coverage</span><br>.nyc_output<br><br><span class="hljs-comment"># Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)</span><br>.grunt<br><br><span class="hljs-comment"># Bower dependency directory (https://bower.io/)</span><br>bower_components<br><br><span class="hljs-comment"># node-waf configuration</span><br>.lock-wscript<br><br><span class="hljs-comment"># Compiled binary addons (https://nodejs.org/api/addons.html)</span><br>build/Release<br><br><span class="hljs-comment"># Dependency directories</span><br>node_modules/<br>jspm_packages/<br><br><span class="hljs-comment"># Snowpack dependency directory (https://snowpack.dev/)</span><br>web_modules/<br><br><span class="hljs-comment"># TypeScript cache</span><br>*.tsbuildinfo<br><br><span class="hljs-comment"># Optional npm cache directory</span><br>.npm<br><br><span class="hljs-comment"># Optional eslint cache</span><br>.eslintcache<br><br><span class="hljs-comment"># Optional stylelint cache</span><br>.stylelintcache<br><br><span class="hljs-comment"># Microbundle cache</span><br>.rpt2_cache/<br>.rts2_cache_cjs/<br>.rts2_cache_es/<br>.rts2_cache_umd/<br><br><span class="hljs-comment"># Optional REPL history</span><br>.node_repl_history<br><br><span class="hljs-comment"># Output of &#x27;npm pack&#x27;</span><br>*.tgz<br><br><span class="hljs-comment"># Yarn Integrity file</span><br>.yarn-integrity<br><br><span class="hljs-comment"># dotenv environment variable files</span><br>.<span class="hljs-built_in">env</span><br>.env.development.local<br>.env.test.local<br>.env.production.local<br>.env.local<br><br><span class="hljs-comment"># parcel-bundler cache (https://parceljs.org/)</span><br>.cache<br>.parcel-cache<br><br><span class="hljs-comment"># Next.js build output</span><br>.next<br>out<br><br><span class="hljs-comment"># Nuxt.js build / generate output</span><br>.nuxt<br>dist<br><br><span class="hljs-comment"># Gatsby files</span><br>.cache/<br><span class="hljs-comment"># Comment in the public line in if your project uses Gatsby and not Next.js</span><br><span class="hljs-comment"># https://nextjs.org/blog/next-9-1#public-directory-support</span><br><span class="hljs-comment"># public</span><br><br><span class="hljs-comment"># vuepress build output</span><br>.vuepress/dist<br><br><span class="hljs-comment"># vuepress v2.x temp and cache directory</span><br>.temp<br>.cache<br><br><span class="hljs-comment"># Docusaurus cache and generated files</span><br>.docusaurus<br><br><span class="hljs-comment"># Serverless directories</span><br>.serverless/<br><br><span class="hljs-comment"># FuseBox cache</span><br>.fusebox/<br><br><span class="hljs-comment"># DynamoDB Local files</span><br>.dynamodb/<br><br><span class="hljs-comment"># TernJS port file</span><br>.tern-port<br><br><span class="hljs-comment"># Stores VSCode versions used for testing VSCode extensions</span><br>.vscode-test<br><br><span class="hljs-comment"># yarn v2</span><br>.yarn/cache<br>.yarn/unplugged<br>.yarn/build-state.yml<br>.yarn/install-state.gz<br>.pnp.*<br><br><br><span class="hljs-comment"># 静态文件</span><br>public <br></code></pre></td></tr></table></figure><h2 id="推送aliyun"><a href="#推送aliyun" class="headerlink" title="推送aliyun"></a>推送aliyun</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 状态</span><br>$ git status<br>hint: core.useBuiltinFSMonitor will be deprecated soon; use core.fsmonitor instead<br>hint: Disable this message with <span class="hljs-string">&quot;git config advice.useCoreFSMonitorConfig false&quot;</span><br>On branch main<br><br>No commits yet<br><br>Untracked files:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="hljs-keyword">in</span> what will be committed)<br>        .dockerignore<br>        .github/<br>        .gitignore<br>        .npmignore<br>        Dockerfile<br>        _config.landscape.yml<br>        _config.yml<br>        db.json<br>        id_rsa_2048<br>        package-lock.json<br>        package.json<br>        scaffolds/<br>        <span class="hljs-built_in">source</span>/<br>        themes/<br>        <br><span class="hljs-comment"># 生成标志</span><br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;1111&#x27;</span> &gt;&gt; <span class="hljs-built_in">source</span>/_posts/hello-world.md<br><br><span class="hljs-comment"># 推送</span><br>git add . <br>git commit -m init<br><br>$ git push origin main<br>Enumerating objects: 122, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (122/122), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (110/110), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (122/122), 580.00 KiB | 7.34 MiB/s, <span class="hljs-keyword">done</span>.<br>Total 122 (delta 0), reused 0 (delta 0), pack-reused 0<br>To https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git<br> * [new branch]      main -&gt; main<br><br></code></pre></td></tr></table></figure><h2 id="aliyun验证"><a href="#aliyun验证" class="headerlink" title="aliyun验证"></a>aliyun验证</h2><p><img src="20220512231059.png" alt="image-20220512231058218"></p><h2 id="添加流水线"><a href="#添加流水线" class="headerlink" title="添加流水线"></a>添加流水线</h2><p><img src="20220512231120.png" alt="image-20220512231118465"></p><p><img src="20220512231146.png" alt="image-20220512231145367"></p><p><img src="20220513000840.png" alt="image-20220513000838863"></p><p><img src="20220512231255.png" alt="image-20220512231253578"></p><p><img src="20220512231628.png" alt="image-20220512231626849"></p><p>删除kubernetes发布</p><p>保存并运行</p><p><img src="20220512231324.png" alt="image-20220512231322519"></p><h2 id="查看运行日志"><a href="#查看运行日志" class="headerlink" title="查看运行日志"></a>查看运行日志</h2><p><img src="20220512232021.png" alt="image-20220512232019242"></p><h2 id="查看github进度"><a href="#查看github进度" class="headerlink" title="查看github进度"></a>查看github进度</h2><p><img src="20220512232122.png" alt="image-20220512232121239"></p><h2 id="查看页面"><a href="#查看页面" class="headerlink" title="查看页面"></a>查看页面</h2><p>当进度为</p><p><img src="20220512232141.png" alt="image-20220512232140087"></p><p><img src="20220512232151.png" alt="image-20220512232150142"></p><h1 id="开发方式"><a href="#开发方式" class="headerlink" title="开发方式"></a>开发方式</h1><h2 id="准备vscode"><a href="#准备vscode" class="headerlink" title="准备vscode"></a>准备vscode</h2><p>在vscode中加载 codeup的仓库</p><p>安装插件 typora  <strong>安装后需要重启vscode</strong></p><p><img src="20220512231737.png" alt="image-20220512231735959"></p><h2 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># clone 代码</span><br><br><span class="hljs-comment"># 安装依赖</span><br>npm install<br><br><span class="hljs-comment"># 运行服务</span><br>npx hexo server<br></code></pre></td></tr></table></figure><blockquote><p><code>npx command</code> 相当于加载了<code>$(npm bin)</code> 目录到环境变量, 后面的命令可以执行</p></blockquote><p>通过本地调试出合理的界面, 推送aliyun, 就可以一键发布</p><h2 id="本地添加文章"><a href="#本地添加文章" class="headerlink" title="本地添加文章"></a>本地添加文章</h2><p>脚本 <code>addarticle.sh</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo -ne <span class="hljs-string">&quot;Enter a \033[1;31mtitle\033[0m for your blog: &quot;</span>; read title<br>[ $? -ne <span class="hljs-number">0</span> ] &amp;&amp; echo <span class="hljs-string">&#x27;exit&#x27;</span> &amp;&amp; sleep <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>[ -z <span class="hljs-string">&quot;$title&quot;</span> ] &amp;&amp; echo title must be exists. &amp;&amp; sleep <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>npx hexo new <span class="hljs-string">&quot;$title&quot;</span><br><br>start $(readlink -f .)<span class="hljs-regexp">/source/</span>_posts<br></code></pre></td></tr></table></figure><p>生成文章, 运行脚本</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="个性化页面展示"><a href="#个性化页面展示" class="headerlink" title="个性化页面展示"></a>个性化页面展示</h2><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><ul><li><code>hexo站点配置</code></li><li><code>fluid</code>主题配置</li><li><code>阅读量</code></li><li><code>评论功能</code></li></ul><p>例如修改标题 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">&quot;5-12 23:30&quot;</span><br><span class="hljs-comment"># ...</span><br><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 处理typora相对路径</span><br>npm install hexo-typora-asset --registry https://registry.npmjs.org --save<br></code></pre></td></tr></table></figure><p>typora中的配置</p><p><img src="image-20220513092438970.png" alt="image-20220513092438970"></p><p>重启 <code>npx hexo server</code></p><p><img src="20220512233119.png" alt="image-20220512233117729"></p><h2 id="文章默认页面-可选"><a href="#文章默认页面-可选" class="headerlink" title="文章默认页面(可选)"></a>文章默认页面(可选)</h2><p><a href="https://hexo.io/docs/writing#Scaffolds">https://hexo.io/docs/writing#Scaffolds</a></p><p>当我们写大量的文章,发现主页不应该显示所有内容,需要readmore, readmore之前有1小段简介</p><p>如下, 上面的nginx文章会<code>显示标题,简介,readmore</code>, 而下面的hello world就显示所有, 这两者区别在于</p><p>后者,默认</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>前者</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">hello</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-comment"># 背景</span><br><br><span class="hljs-string">这篇讲解如何编译安装nginx,</span> <span class="hljs-string">优化nginx</span><br><br><span class="hljs-string">&lt;!--more--&gt;</span><br></code></pre></td></tr></table></figure><p><img src="20220512234116.png" alt="image-20220512234114962"></p><p>要实现每个文章创建均生成nginx这样的模板, 编辑 <code>scaffolds/post.md</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> &#123;&#123; <span class="hljs-string">title</span> &#125;&#125;<br><span class="hljs-attr">date:</span> &#123;&#123; <span class="hljs-string">date</span> &#125;&#125;<br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment"># 背景</span><br><br><span class="hljs-string">&lt;!--more--&gt;</span><br></code></pre></td></tr></table></figure><p>现在运行脚本 <code>addarticle.sh</code> 添加<strong>第2个文章</strong></p><p>网页已经达到效果</p><p><img src="20220512234553.png" alt="image-20220512234551537"></p><h2 id="准备一个主题-fluid"><a href="#准备一个主题-fluid" class="headerlink" title="准备一个主题 fluid"></a>准备一个主题 fluid</h2><blockquote><p>使用此主题后, 不需要前面的文章默认页面, 每个页面不需要加<code>&lt;!--more--&gt;</code> 主题会自动抽取前多少个字符,作为描述的.</p></blockquote><p>Fluid主题 <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ git submodule add https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/fluid-dev/</span>hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><p>编辑 <code>_config.yml</code></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: https:<span class="hljs-comment">//hexo.io/plugins/</span><br>## Themes: https:<span class="hljs-comment">//hexo.io/themes/</span><br>theme: fluid<br></code></pre></td></tr></table></figure><p>重启 <code>npx hexo server</code></p><p><img src="20220512235039.png" alt="image-20220512235038001"></p><p>配置主题 <code>fluid</code> 需要准备一个文件 <code>_config.主题名.yml</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp themes<span class="hljs-regexp">/fluid/</span>_config.yml _config.fluid.yml<br></code></pre></td></tr></table></figure><p>测试配置是否生效,修改 <code>_config.fluid.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 首页副标题的独立设置</span><br><span class="hljs-comment"># Independent config of home page subtitle</span><br><span class="hljs-attr">slogan:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br>  <span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br>  <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Hello 05-12 .... &quot;</span><br></code></pre></td></tr></table></figure><p>重启 <code>npx hexo server</code></p><p><img src="20220512235647.png" alt="image-20220512235645718"></p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>准备脚本 <code>push.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>git config --<span class="hljs-built_in">local</span> pull.rebase <span class="hljs-literal">true</span><br>git add .<br>git commit -m <span class="hljs-string">&quot;笔记本-`date +%F_%T`&quot;</span><br><br><br>git push origin main<br><br>git pull origin main<br>[ $? -ne 0 ] &amp;&amp; <span class="hljs-built_in">exit</span> -1<br><br>git push origin main<br><br><span class="hljs-comment"># test</span><br>start $(<span class="hljs-built_in">readlink</span> -f .)/source/_posts<br></code></pre></td></tr></table></figure><p><a href="https://slcnx.github.io/">https://slcnx.github.io/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
